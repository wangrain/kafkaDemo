From: <Saved by Blink>
Subject: KafkaConsumer (kafka 0.10.0.1 API)
Date: Tue, 12 Jun 2017 02:46:56 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--4zSMpuCixkIqOTmtCXU1ukyDDNPrNvrNqwIg9sTylH----"

------MultipartBoundary--4zSMpuCixkIqOTmtCXU1ukyDDNPrNvrNqwIg9sTylH----
Content-Type: text/html
Content-ID: <frame-95-42206748-62cb-49aa-877c-57ee9dd103dd@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: http://kafka.apache.org/0100/javadoc/index.html?org/apache/kafka/clients/producer/KafkaProducer.html

<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Frameset//EN" "http://www.w3.o=
rg/TR/html4/frameset.dtd"><!-- NewPage --><html lang=3D"en"><head><meta htt=
p-equiv=3D"Content-Type" content=3D"text/html; charset=3Dwindows-1252">
<!-- Generated by javadoc on Thu Aug 04 13:19:29 BST 2016 -->
<title>KafkaConsumer (kafka 0.10.0.1 API)</title>

</head>
<frameset cols=3D"20%,80%" title=3D"Documentation frame">
<frameset rows=3D"30%,70%" title=3D"Left frames">
<frame src=3D"cid:frame-96-ec01f5b6-66bf-47fa-bb13-6771d0221270@mhtml.blink=
" name=3D"packageListFrame" title=3D"All Packages">
<frame src=3D"cid:frame-97-8e0fecf6-d012-439f-b5af-d5037f010823@mhtml.blink=
" name=3D"packageFrame" title=3D"All classes and interfaces (except non-sta=
tic nested types)">
</frameset>
<frame src=3D"cid:frame-98-2605df06-5c5b-4daf-bafc-c312c8f47076@mhtml.blink=
" name=3D"classFrame" title=3D"Package, class and interface descriptions" s=
crolling=3D"yes">

</frameset>

</html>
------MultipartBoundary--4zSMpuCixkIqOTmtCXU1ukyDDNPrNvrNqwIg9sTylH----
Content-Type: text/html
Content-ID: <frame-96-ec01f5b6-66bf-47fa-bb13-6771d0221270@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: http://kafka.apache.org/0100/javadoc/overview-frame.html

<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.=
w3.org/TR/html4/loose.dtd"><!-- NewPage --><html lang=3D"en"><head><meta ht=
tp-equiv=3D"Content-Type" content=3D"text/html; charset=3Dwindows-1252">
<!-- Generated by javadoc (version 1.7.0_80) on Thu Aug 04 13:19:29 BST 201=
6 -->
<title>Overview List (kafka 0.10.0.1 API)</title>
<meta name=3D"date" content=3D"2016-08-04">
<link rel=3D"stylesheet" type=3D"text/css" href=3D"http://kafka.apache.org/=
0100/javadoc/stylesheet.css" title=3D"Style">
</head>
<body>
<div class=3D"indexHeader"><a href=3D"http://kafka.apache.org/0100/javadoc/=
allclasses-frame.html" target=3D"packageFrame">All Classes</a></div>
<div class=3D"indexContainer">
<h2 title=3D"Packages">Packages</h2>
<ul title=3D"Packages">
<li><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/client=
s/consumer/package-frame.html" target=3D"packageFrame">org.apache.kafka.cli=
ents.consumer</a></li>
<li><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/client=
s/producer/package-frame.html" target=3D"packageFrame">org.apache.kafka.cli=
ents.producer</a></li>
<li><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/common=
/package-frame.html" target=3D"packageFrame">org.apache.kafka.common</a></l=
i>
<li><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/common=
/config/package-frame.html" target=3D"packageFrame">org.apache.kafka.common=
.config</a></li>
<li><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/common=
/errors/package-frame.html" target=3D"packageFrame">org.apache.kafka.common=
.errors</a></li>
<li><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/common=
/serialization/package-frame.html" target=3D"packageFrame">org.apache.kafka=
.common.serialization</a></li>
<li><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/connec=
t/connector/package-frame.html" target=3D"packageFrame">org.apache.kafka.co=
nnect.connector</a></li>
<li><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/connec=
t/data/package-frame.html" target=3D"packageFrame">org.apache.kafka.connect=
.data</a></li>
<li><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/connec=
t/errors/package-frame.html" target=3D"packageFrame">org.apache.kafka.conne=
ct.errors</a></li>
<li><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/connec=
t/sink/package-frame.html" target=3D"packageFrame">org.apache.kafka.connect=
.sink</a></li>
<li><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/connec=
t/source/package-frame.html" target=3D"packageFrame">org.apache.kafka.conne=
ct.source</a></li>
<li><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/connec=
t/storage/package-frame.html" target=3D"packageFrame">org.apache.kafka.conn=
ect.storage</a></li>
<li><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/connec=
t/util/package-frame.html" target=3D"packageFrame">org.apache.kafka.connect=
.util</a></li>
<li><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/stream=
s/package-frame.html" target=3D"packageFrame">org.apache.kafka.streams</a><=
/li>
<li><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/stream=
s/errors/package-frame.html" target=3D"packageFrame">org.apache.kafka.strea=
ms.errors</a></li>
<li><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/stream=
s/kstream/package-frame.html" target=3D"packageFrame">org.apache.kafka.stre=
ams.kstream</a></li>
<li><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/stream=
s/processor/package-frame.html" target=3D"packageFrame">org.apache.kafka.st=
reams.processor</a></li>
<li><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/stream=
s/state/package-frame.html" target=3D"packageFrame">org.apache.kafka.stream=
s.state</a></li>
</ul>
</div>
<p>&nbsp;</p>


</body></html>
------MultipartBoundary--4zSMpuCixkIqOTmtCXU1ukyDDNPrNvrNqwIg9sTylH----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: http://kafka.apache.org/0100/javadoc/stylesheet.css

@charset "windows-1252";

body { background-color: rgb(255, 255, 255); color: rgb(53, 56, 51); font-f=
amily: Arial, Helvetica, sans-serif; font-size: 76%; margin: 0px; }

a:link, a:visited { text-decoration: none; color: rgb(76, 107, 135); }

a:hover, a:focus { text-decoration: none; color: rgb(187, 122, 42); }

a:active { text-decoration: none; color: rgb(76, 107, 135); }

a[name] { color: rgb(53, 56, 51); }

a[name]:hover { text-decoration: none; color: rgb(53, 56, 51); }

pre { font-size: 1.3em; }

h1 { font-size: 1.8em; }

h2 { font-size: 1.5em; }

h3 { font-size: 1.4em; }

h4 { font-size: 1.3em; }

h5 { font-size: 1.2em; }

h6 { font-size: 1.1em; }

ul { list-style-type: disc; }

code, tt { font-size: 1.2em; }

dt code { font-size: 1.2em; }

table tr td dt code { font-size: 1.2em; vertical-align: top; }

sup { font-size: 0.6em; }

.clear { clear: both; height: 0px; overflow: hidden; }

.aboutLanguage { float: right; padding: 0px 21px; font-size: 0.8em; z-index=
: 200; margin-top: -7px; }

.legalCopy { margin-left: 0.5em; }

.bar a, .bar a:link, .bar a:visited, .bar a:active { color: rgb(255, 255, 2=
55); text-decoration: none; }

.bar a:hover, .bar a:focus { color: rgb(187, 122, 42); }

.tab { background-color: rgb(0, 102, 255); background-image: url("resources=
/titlebar.gif"); background-position: left top; background-repeat: no-repea=
t; color: rgb(255, 255, 255); padding: 8px; width: 5em; font-weight: bold; =
}

.bar { background-image: url("resources/background.gif"); background-repeat=
: repeat-x; color: rgb(255, 255, 255); padding: 0.8em 0.5em 0.4em 0.8em; he=
ight: auto; font-size: 1em; margin: 0px; }

.topNav { background-image: url("resources/background.gif"); background-rep=
eat: repeat-x; color: rgb(255, 255, 255); float: left; padding: 10px 0px 0p=
x; width: 100%; clear: right; height: 2.8em; overflow: hidden; }

.bottomNav { margin-top: 10px; background-image: url("resources/background.=
gif"); background-repeat: repeat-x; color: rgb(255, 255, 255); float: left;=
 padding: 10px 0px 0px; width: 100%; clear: right; height: 2.8em; overflow:=
 hidden; }

.subNav { background-color: rgb(222, 227, 233); border-bottom: 1px solid rg=
b(158, 173, 192); float: left; width: 100%; overflow: hidden; }

.subNav div { clear: left; float: left; padding: 0px 0px 5px 6px; }

ul.navList, ul.subNavList { float: left; margin: 0px 25px 0px 0px; padding:=
 0px; }

ul.navList li { list-style: none; float: left; padding: 3px 6px; }

ul.subNavList li { list-style: none; float: left; font-size: 90%; }

.topNav a:link, .topNav a:active, .topNav a:visited, .bottomNav a:link, .bo=
ttomNav a:active, .bottomNav a:visited { color: rgb(255, 255, 255); text-de=
coration: none; }

.topNav a:hover, .bottomNav a:hover { text-decoration: none; color: rgb(187=
, 122, 42); }

.navBarCell1Rev { background-image: url("resources/tab.gif"); background-co=
lor: rgb(168, 136, 52); color: rgb(255, 255, 255); margin: auto 5px; border=
: 1px solid rgb(201, 170, 68); }

.header, .footer { clear: both; margin: 0px 20px; padding: 5px 0px 0px; }

.indexHeader { margin: 10px; position: relative; }

.indexHeader h1 { font-size: 1.3em; }

.title { color: rgb(44, 69, 87); margin: 10px 0px; }

.subTitle { margin: 5px 0px 0px; }

.header ul { margin: 0px 0px 25px; padding: 0px; }

.footer ul { margin: 20px 0px 5px; }

.header ul li, .footer ul li { list-style: none; font-size: 1.2em; }

div.details ul.blockList ul.blockList ul.blockList li.blockList h4, div.det=
ails ul.blockList ul.blockList ul.blockListLast li.blockList h4 { backgroun=
d-color: rgb(222, 227, 233); border-top: 1px solid rgb(158, 173, 192); bord=
er-bottom: 1px solid rgb(158, 173, 192); margin: 0px 0px 6px -8px; padding:=
 2px 5px; }

ul.blockList ul.blockList ul.blockList li.blockList h3 { background-color: =
rgb(222, 227, 233); border-top: 1px solid rgb(158, 173, 192); border-bottom=
: 1px solid rgb(158, 173, 192); margin: 0px 0px 6px -8px; padding: 2px 5px;=
 }

ul.blockList ul.blockList li.blockList h3 { padding: 0px; margin: 15px 0px;=
 }

ul.blockList li.blockList h2 { padding: 0px 0px 20px; }

.contentContainer, .sourceContainer, .classUseContainer, .serializedFormCon=
tainer, .constantValuesContainer { clear: both; padding: 10px 20px; positio=
n: relative; }

.indexContainer { margin: 10px; position: relative; font-size: 1em; }

.indexContainer h2 { font-size: 1.1em; padding: 0px 0px 3px; }

.indexContainer ul { margin: 0px; padding: 0px; }

.indexContainer ul li { list-style: none; }

.contentContainer .description dl dt, .contentContainer .details dl dt, .se=
rializedFormContainer dl dt { font-size: 1.1em; font-weight: bold; margin: =
10px 0px 0px; color: rgb(78, 78, 78); }

.contentContainer .description dl dd, .contentContainer .details dl dd, .se=
rializedFormContainer dl dd { margin: 10px 0px 10px 20px; }

.serializedFormContainer dl.nameValue dt { margin-left: 1px; font-size: 1.1=
em; display: inline; font-weight: bold; }

.serializedFormContainer dl.nameValue dd { margin: 0px 0px 0px 1px; font-si=
ze: 1.1em; display: inline; }

ul.horizontal li { display: inline; font-size: 0.9em; }

ul.inheritance { margin: 0px; padding: 0px; }

ul.inheritance li { display: inline; list-style: none; }

ul.inheritance li ul.inheritance { margin-left: 15px; padding-left: 15px; p=
adding-top: 1px; }

ul.blockList, ul.blockListLast { margin: 10px 0px; padding: 0px; }

ul.blockList li.blockList, ul.blockListLast li.blockList { list-style: none=
; margin-bottom: 25px; }

ul.blockList ul.blockList li.blockList, ul.blockList ul.blockListLast li.bl=
ockList { padding: 0px 20px 5px 10px; border: 1px solid rgb(158, 173, 192);=
 background-color: rgb(249, 249, 249); }

ul.blockList ul.blockList ul.blockList li.blockList, ul.blockList ul.blockL=
ist ul.blockListLast li.blockList { padding: 0px 0px 5px 8px; background-co=
lor: rgb(255, 255, 255); border-right: 1px solid rgb(158, 173, 192); border=
-bottom: 1px solid rgb(158, 173, 192); border-left: 1px solid rgb(158, 173,=
 192); border-image: initial; border-top: none; }

ul.blockList ul.blockList ul.blockList ul.blockList li.blockList { margin-l=
eft: 0px; padding-left: 0px; padding-bottom: 15px; border-top: none; border=
-right: none; border-left: none; border-image: initial; border-bottom: 1px =
solid rgb(158, 173, 192); }

ul.blockList ul.blockList ul.blockList ul.blockList li.blockListLast { list=
-style: none; border-bottom: none; padding-bottom: 0px; }

table tr td dl, table tr td dl dt, table tr td dl dd { margin-top: 0px; mar=
gin-bottom: 1px; }

.contentContainer table, .classUseContainer table, .constantValuesContainer=
 table { border-bottom: 1px solid rgb(158, 173, 192); width: 100%; }

.contentContainer ul li table, .classUseContainer ul li table, .constantVal=
uesContainer ul li table { width: 100%; }

.contentContainer .description table, .contentContainer .details table { bo=
rder-bottom: none; }

.contentContainer ul li table th.colOne, .contentContainer ul li table th.c=
olFirst, .contentContainer ul li table th.colLast, .classUseContainer ul li=
 table th, .constantValuesContainer ul li table th, .contentContainer ul li=
 table td.colOne, .contentContainer ul li table td.colFirst, .contentContai=
ner ul li table td.colLast, .classUseContainer ul li table td, .constantVal=
uesContainer ul li table td { vertical-align: top; padding-right: 20px; }

.contentContainer ul li table th.colLast, .classUseContainer ul li table th=
.colLast, .constantValuesContainer ul li table th.colLast, .contentContaine=
r ul li table td.colLast, .classUseContainer ul li table td.colLast, .const=
antValuesContainer ul li table td.colLast, .contentContainer ul li table th=
.colOne, .classUseContainer ul li table th.colOne, .contentContainer ul li =
table td.colOne, .classUseContainer ul li table td.colOne { padding-right: =
3px; }

.overviewSummary caption, .packageSummary caption, .contentContainer ul.blo=
ckList li.blockList caption, .summary caption, .classUseContainer caption, =
.constantValuesContainer caption { position: relative; text-align: left; ba=
ckground-repeat: no-repeat; color: rgb(255, 255, 255); font-weight: bold; c=
lear: none; overflow: hidden; padding: 0px; margin: 0px; }

caption a:link, caption a:hover, caption a:active, caption a:visited { colo=
r: rgb(255, 255, 255); }

.overviewSummary caption span, .packageSummary caption span, .contentContai=
ner ul.blockList li.blockList caption span, .summary caption span, .classUs=
eContainer caption span, .constantValuesContainer caption span { white-spac=
e: nowrap; padding-top: 8px; padding-left: 8px; display: block; float: left=
; background-image: url("resources/titlebar.gif"); height: 18px; }

.overviewSummary .tabEnd, .packageSummary .tabEnd, .contentContainer ul.blo=
ckList li.blockList .tabEnd, .summary .tabEnd, .classUseContainer .tabEnd, =
.constantValuesContainer .tabEnd { width: 10px; background-image: url("reso=
urces/titlebar_end.gif"); background-repeat: no-repeat; background-position=
: right top; position: relative; float: left; }

ul.blockList ul.blockList li.blockList table { margin: 0px 0px 12px; width:=
 100%; }

.tableSubHeadingColor { background-color: rgb(238, 238, 255); }

.altColor { background-color: rgb(238, 238, 239); }

.rowColor { background-color: rgb(255, 255, 255); }

.overviewSummary td, .packageSummary td, .contentContainer ul.blockList li.=
blockList td, .summary td, .classUseContainer td, .constantValuesContainer =
td { text-align: left; padding: 3px 3px 3px 7px; }

th.colFirst, th.colLast, th.colOne, .constantValuesContainer th { backgroun=
d: rgb(222, 227, 233); border-top: 1px solid rgb(158, 173, 192); border-bot=
tom: 1px solid rgb(158, 173, 192); text-align: left; padding: 3px 3px 3px 7=
px; }

td.colOne a:link, td.colOne a:active, td.colOne a:visited, td.colOne a:hove=
r, td.colFirst a:link, td.colFirst a:active, td.colFirst a:visited, td.colF=
irst a:hover, td.colLast a:link, td.colLast a:active, td.colLast a:visited,=
 td.colLast a:hover, .constantValuesContainer td a:link, .constantValuesCon=
tainer td a:active, .constantValuesContainer td a:visited, .constantValuesC=
ontainer td a:hover { font-weight: bold; }

td.colFirst, th.colFirst { border-left: 1px solid rgb(158, 173, 192); white=
-space: nowrap; }

td.colLast, th.colLast { border-right: 1px solid rgb(158, 173, 192); }

td.colOne, th.colOne { border-right: 1px solid rgb(158, 173, 192); border-l=
eft: 1px solid rgb(158, 173, 192); }

table.overviewSummary { padding: 0px; margin-left: 0px; }

table.overviewSummary td.colFirst, table.overviewSummary th.colFirst, table=
.overviewSummary td.colOne, table.overviewSummary th.colOne { width: 25%; v=
ertical-align: middle; }

table.packageSummary td.colFirst, table.overviewSummary th.colFirst { width=
: 25%; vertical-align: middle; }

.description pre { margin-top: 0px; }

.deprecatedContent { margin: 0px; padding: 10px 0px; }

.docSummary { padding: 0px; }

.sourceLineNo { color: green; padding: 0px 30px 0px 0px; }

h1.hidden { visibility: hidden; overflow: hidden; font-size: 0.9em; }

.block { display: block; margin: 3px 0px 0px; }

.strong { font-weight: bold; }
------MultipartBoundary--4zSMpuCixkIqOTmtCXU1ukyDDNPrNvrNqwIg9sTylH----
Content-Type: text/html
Content-ID: <frame-97-8e0fecf6-d012-439f-b5af-d5037f010823@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: http://kafka.apache.org/0100/javadoc/org/apache/kafka/clients/consumer/package-frame.html

<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.=
w3.org/TR/html4/loose.dtd"><!-- NewPage --><html lang=3D"en"><head><meta ht=
tp-equiv=3D"Content-Type" content=3D"text/html; charset=3Dwindows-1252">
<!-- Generated by javadoc (version 1.7.0_80) on Thu Aug 04 13:19:29 BST 201=
6 -->
<title>org.apache.kafka.clients.consumer (kafka 0.10.0.1 API)</title>
<meta name=3D"date" content=3D"2016-08-04">
<link rel=3D"stylesheet" type=3D"text/css" href=3D"http://kafka.apache.org/=
0100/javadoc/stylesheet.css" title=3D"Style">
</head>
<body>
<h1 class=3D"bar"><a href=3D"http://kafka.apache.org/0100/javadoc/org/apach=
e/kafka/clients/consumer/package-summary.html" target=3D"classFrame">org.ap=
ache.kafka.clients.consumer</a></h1>
<div class=3D"indexContainer">
<h2 title=3D"Interfaces">Interfaces</h2>
<ul title=3D"Interfaces">
<li><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/client=
s/consumer/Consumer.html" title=3D"interface in org.apache.kafka.clients.co=
nsumer" target=3D"classFrame"><i>Consumer</i></a></li>
<li><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/client=
s/consumer/ConsumerInterceptor.html" title=3D"interface in org.apache.kafka=
.clients.consumer" target=3D"classFrame"><i>ConsumerInterceptor</i></a></li=
>
<li><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/client=
s/consumer/ConsumerRebalanceListener.html" title=3D"interface in org.apache=
.kafka.clients.consumer" target=3D"classFrame"><i>ConsumerRebalanceListener=
</i></a></li>
<li><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/client=
s/consumer/OffsetCommitCallback.html" title=3D"interface in org.apache.kafk=
a.clients.consumer" target=3D"classFrame"><i>OffsetCommitCallback</i></a></=
li>
</ul>
<h2 title=3D"Classes">Classes</h2>
<ul title=3D"Classes">
<li><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/client=
s/consumer/ConsumerConfig.html" title=3D"class in org.apache.kafka.clients.=
consumer" target=3D"classFrame">ConsumerConfig</a></li>
<li><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/client=
s/consumer/ConsumerRecord.html" title=3D"class in org.apache.kafka.clients.=
consumer" target=3D"classFrame">ConsumerRecord</a></li>
<li><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/client=
s/consumer/ConsumerRecords.html" title=3D"class in org.apache.kafka.clients=
.consumer" target=3D"classFrame">ConsumerRecords</a></li>
<li><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/client=
s/consumer/KafkaConsumer.html" title=3D"class in org.apache.kafka.clients.c=
onsumer" target=3D"classFrame">KafkaConsumer</a></li>
<li><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/client=
s/consumer/MockConsumer.html" title=3D"class in org.apache.kafka.clients.co=
nsumer" target=3D"classFrame">MockConsumer</a></li>
<li><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/client=
s/consumer/OffsetAndMetadata.html" title=3D"class in org.apache.kafka.clien=
ts.consumer" target=3D"classFrame">OffsetAndMetadata</a></li>
<li><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/client=
s/consumer/RangeAssignor.html" title=3D"class in org.apache.kafka.clients.c=
onsumer" target=3D"classFrame">RangeAssignor</a></li>
<li><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/client=
s/consumer/RoundRobinAssignor.html" title=3D"class in org.apache.kafka.clie=
nts.consumer" target=3D"classFrame">RoundRobinAssignor</a></li>
</ul>
<h2 title=3D"Enums">Enums</h2>
<ul title=3D"Enums">
<li><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/client=
s/consumer/OffsetResetStrategy.html" title=3D"enum in org.apache.kafka.clie=
nts.consumer" target=3D"classFrame">OffsetResetStrategy</a></li>
</ul>
<h2 title=3D"Exceptions">Exceptions</h2>
<ul title=3D"Exceptions">
<li><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/client=
s/consumer/CommitFailedException.html" title=3D"class in org.apache.kafka.c=
lients.consumer" target=3D"classFrame">CommitFailedException</a></li>
<li><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/client=
s/consumer/InvalidOffsetException.html" title=3D"class in org.apache.kafka.=
clients.consumer" target=3D"classFrame">InvalidOffsetException</a></li>
<li><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/client=
s/consumer/NoOffsetForPartitionException.html" title=3D"class in org.apache=
.kafka.clients.consumer" target=3D"classFrame">NoOffsetForPartitionExceptio=
n</a></li>
<li><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/client=
s/consumer/OffsetOutOfRangeException.html" title=3D"class in org.apache.kaf=
ka.clients.consumer" target=3D"classFrame">OffsetOutOfRangeException</a></l=
i>
<li><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/client=
s/consumer/RetriableCommitFailedException.html" title=3D"class in org.apach=
e.kafka.clients.consumer" target=3D"classFrame">RetriableCommitFailedExcept=
ion</a></li>
</ul>
</div>


</body></html>
------MultipartBoundary--4zSMpuCixkIqOTmtCXU1ukyDDNPrNvrNqwIg9sTylH----
Content-Type: text/html
Content-ID: <frame-98-2605df06-5c5b-4daf-bafc-c312c8f47076@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: http://kafka.apache.org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html

<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.=
w3.org/TR/html4/loose.dtd"><!-- NewPage --><html lang=3D"en"><head><meta ht=
tp-equiv=3D"Content-Type" content=3D"text/html; charset=3Dwindows-1252">
<!-- Generated by javadoc (version 1.7.0_80) on Thu Aug 04 13:19:27 BST 201=
6 -->
<title>KafkaConsumer (kafka 0.10.0.1 API)</title>
<meta name=3D"date" content=3D"2016-08-04">
<link rel=3D"stylesheet" type=3D"text/css" href=3D"http://kafka.apache.org/=
0100/javadoc/stylesheet.css" title=3D"Style">
</head>
<body>


<!-- =3D=3D=3D=3D=3D=3D=3D=3D=3D START OF TOP NAVBAR =3D=3D=3D=3D=3D=3D=3D =
-->
<div class=3D"topNav"><a name=3D"navbar_top">
<!--   -->
</a><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/client=
s/consumer/KafkaConsumer.html#skip-navbar_top" title=3D"Skip navigation lin=
ks"></a><a name=3D"navbar_top_firstrow">
<!--   -->
</a>
<ul class=3D"navList" title=3D"Navigation">
<li><a href=3D"http://kafka.apache.org/0100/javadoc/overview-summary.html">=
Overview</a></li>
<li><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/client=
s/consumer/package-summary.html">Package</a></li>
<li class=3D"navBarCell1Rev">Class</li>
<li><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/client=
s/consumer/package-tree.html">Tree</a></li>
<li><a href=3D"http://kafka.apache.org/0100/javadoc/deprecated-list.html">D=
eprecated</a></li>
<li><a href=3D"http://kafka.apache.org/0100/javadoc/index-all.html">Index</=
a></li>
<li><a href=3D"http://kafka.apache.org/0100/javadoc/help-doc.html">Help</a>=
</li>
</ul>
</div>
<div class=3D"subNav">
<ul class=3D"navList">
<li><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/client=
s/consumer/InvalidOffsetException.html" title=3D"class in org.apache.kafka.=
clients.consumer"><span class=3D"strong">Prev Class</span></a></li>
<li><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/client=
s/consumer/MockConsumer.html" title=3D"class in org.apache.kafka.clients.co=
nsumer"><span class=3D"strong">Next Class</span></a></li>
</ul>
<ul class=3D"navList">
<li><a href=3D"http://kafka.apache.org/0100/javadoc/index.html?org/apache/k=
afka/clients/consumer/KafkaConsumer.html" target=3D"_top">Frames</a></li>
<li><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/client=
s/consumer/KafkaConsumer.html" target=3D"_top">No Frames</a></li>
</ul>

<div>

</div>
<div>
<ul class=3D"subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/client=
s/consumer/KafkaConsumer.html#constructor_summary">Constr</a>&nbsp;|&nbsp;<=
/li>
<li><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/client=
s/consumer/KafkaConsumer.html#method_summary">Method</a></li>
</ul>
<ul class=3D"subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/client=
s/consumer/KafkaConsumer.html#constructor_detail">Constr</a>&nbsp;|&nbsp;</=
li>
<li><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/client=
s/consumer/KafkaConsumer.html#method_detail">Method</a></li>
</ul>
</div>
<a name=3D"skip-navbar_top">
<!--   -->
</a></div>
<!-- =3D=3D=3D=3D=3D=3D=3D=3D=3D END OF TOP NAVBAR =3D=3D=3D=3D=3D=3D=3D=3D=
=3D -->
<!-- =3D=3D=3D=3D=3D=3D=3D=3D START OF CLASS DATA =3D=3D=3D=3D=3D=3D=3D=3D =
-->
<div class=3D"header">
<div class=3D"subTitle">org.apache.kafka.clients.consumer</div>
<h2 title=3D"Class KafkaConsumer" class=3D"title">Class KafkaConsumer&lt;K,=
V&gt;</h2>
</div>
<div class=3D"contentContainer">
<ul class=3D"inheritance">
<li><a href=3D"http://docs.oracle.com/javase/7/docs/api/java/lang/Object.ht=
ml?is-external=3Dtrue" title=3D"class or interface in java.lang">java.lang.=
Object</a></li>
<li>
<ul class=3D"inheritance">
<li>org.apache.kafka.clients.consumer.KafkaConsumer&lt;K,V&gt;</li>
</ul>
</li>
</ul>
<div class=3D"description">
<ul class=3D"blockList">
<li class=3D"blockList">
<dl>
<dt>All Implemented Interfaces:</dt>
<dd><a href=3D"http://docs.oracle.com/javase/7/docs/api/java/io/Closeable.h=
tml?is-external=3Dtrue" title=3D"class or interface in java.io">Closeable</=
a>, <a href=3D"http://docs.oracle.com/javase/7/docs/api/java/lang/AutoClose=
able.html?is-external=3Dtrue" title=3D"class or interface in java.lang">Aut=
oCloseable</a>, <a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/=
kafka/clients/consumer/Consumer.html" title=3D"interface in org.apache.kafk=
a.clients.consumer">Consumer</a>&lt;K,V&gt;</dd>
</dl>
<hr>
<br>
<pre>public class <span class=3D"strong">KafkaConsumer&lt;K,V&gt;</span>
extends <a href=3D"http://docs.oracle.com/javase/7/docs/api/java/lang/Objec=
t.html?is-external=3Dtrue" title=3D"class or interface in java.lang">Object=
</a>
implements <a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka=
/clients/consumer/Consumer.html" title=3D"interface in org.apache.kafka.cli=
ents.consumer">Consumer</a>&lt;K,V&gt;</pre>
<div class=3D"block">A Kafka client that consumes records from a Kafka clus=
ter.
 <p>
 It will transparently handle the failure of servers in the Kafka cluster, =
and transparently adapt as partitions of
 data it fetches migrate within the cluster. This client also interacts wit=
h the server to allow groups of
 consumers to load balance consumption using consumer groups (as described =
below).
 </p><p>
 The consumer maintains TCP connections to the necessary brokers to fetch d=
ata.
 Failure to close the consumer after use will leak these connections.
 The consumer is not thread-safe. See <a href=3D"http://kafka.apache.org/01=
00/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#multithread=
ed">Multi-threaded Processing</a> for more details.

 </p><h3>Offsets and Consumer Position</h3>
 Kafka maintains a numerical offset for each record in a partition. This of=
fset acts as a kind of unique identifier of
 a record within that partition, and also denotes the position of the consu=
mer in the partition. That is, a consumer
 which has position 5 has consumed records with offsets 0 through 4 and wil=
l next receive the record with offset 5. There
 are actually two notions of position relevant to the user of the consumer.
 <p>
 The <a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/clien=
ts/consumer/KafkaConsumer.html#position(org.apache.kafka.common.TopicPartit=
ion)"><code>position</code></a> of the consumer gives the offset of the nex=
t record that will be given
 out. It will be one larger than the highest offset the consumer has seen i=
n that partition. It automatically advances
 every time the consumer receives data calls <a href=3D"http://kafka.apache=
.org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#poll=
(long)"><code>poll(long)</code></a> and receives messages.
 </p><p>
 The <a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/clien=
ts/consumer/KafkaConsumer.html#commitSync()"><code>committed position</code=
></a> is the last offset that has been saved securely. Should the
 process fail and restart, this is the offset that it will recover to. The =
consumer can either automatically commit
 offsets periodically; or it can choose to control this committed position =
manually by calling
 <a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/clients/c=
onsumer/KafkaConsumer.html#commitSync()"><code>commitSync</code></a>, which=
 will block until the offsets have been successfully committed
 or fatal error has happened during the commit process, or <a href=3D"http:=
//kafka.apache.org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaCons=
umer.html#commitAsync(org.apache.kafka.clients.consumer.OffsetCommitCallbac=
k)"><code>commitAsync</code></a> which is non-blocking
 and will trigger <a href=3D"http://kafka.apache.org/0100/javadoc/org/apach=
e/kafka/clients/consumer/OffsetCommitCallback.html" title=3D"interface in o=
rg.apache.kafka.clients.consumer"><code>OffsetCommitCallback</code></a> upo=
n either successfully committed or fatally failed.
 </p><p>
 This distinction gives the consumer control over when a record is consider=
ed consumed. It is discussed in further
 detail below.

 </p><h3>Consumer Groups and Topic Subscriptions</h3>

 Kafka uses the concept of <i>consumer groups</i> to allow a pool of proces=
ses to divide the work of consuming and
 processing records. These processes can either be running on the same mach=
ine or, as is more likely, they can be
 distributed over many machines to provide scalability and fault tolerance =
for processing.
 <p>
 Each Kafka consumer is able to configure a consumer group that it belongs =
to, and can dynamically set the list
 of topics it wants to subscribe to through one of the <a href=3D"http://ka=
fka.apache.org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer=
.html#subscribe(java.util.Collection,%20org.apache.kafka.clients.consumer.C=
onsumerRebalanceListener)"><code>subscribe</code></a>
 APIs. Kafka will deliver each message in the subscribed topics to one proc=
ess in each consumer group.
 This is achieved by balancing the partitions between all members in the co=
nsumer group so that each partition is
 assigned to exactly one consumer in the group. So if there is a topic with=
 four partitions, and a consumer group with two
 processes, each process would consume from two partitions.
 </p><p>
 Membership in a consumer group is maintained dynamically: if a process fai=
ls, the partitions assigned to it will
 be reassigned to other consumers in the same group. Similarly, if a new co=
nsumer joins the group, partitions will be moved
 from existing consumers to the new one. This is known as <i>rebalancing</i=
> the group and is discussed in more
 detail <a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/cl=
ients/consumer/KafkaConsumer.html#failuredetection">below</a>. Note that th=
e same process is also used when new partitions are added
 to one of the subscribed topics: the group automatically detects the new p=
artitions and rebalances the group so
 that every new partition is assigned to one of the members.
 </p><p>
 Conceptually you can think of a consumer group as being a single logical s=
ubscriber that happens to be made up of
 multiple processes. As a multi-subscriber system, Kafka naturally supports=
 having any number of consumer groups for a
 given topic without duplicating data (additional consumers are actually qu=
ite cheap).
 </p><p>
 This is a slight generalization of the functionality that is common in mes=
saging systems. To get semantics similar to
 a queue in a traditional messaging system all processes would be part of a=
 single consumer group and hence record
 delivery would be balanced over the group like with a queue. Unlike a trad=
itional messaging system, though, you can
 have multiple such groups. To get semantics similar to pub-sub in a tradit=
ional messaging system each process would
 have its own consumer group, so each process would subscribe to all the re=
cords published to the topic.
 </p><p>
 In addition, when group reassignment happens automatically, consumers can =
be notified through <a href=3D"http://kafka.apache.org/0100/javadoc/org/apa=
che/kafka/clients/consumer/ConsumerRebalanceListener.html" title=3D"interfa=
ce in org.apache.kafka.clients.consumer"><code>ConsumerRebalanceListener</c=
ode></a>,
 which allows them to finish necessary application-level logic such as stat=
e cleanup, manual offset
 commits (note that offsets are always committed for a given consumer group=
), etc.
 See <a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/clien=
ts/consumer/KafkaConsumer.html#rebalancecallback">Storing Offsets Outside K=
afka</a> for more details
 </p><p>
 It is also possible for the consumer to <a href=3D"http://kafka.apache.org=
/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#manualas=
signment">manually assign</a> specific partitions
 (similar to the older "simple" consumer) using <a href=3D"http://kafka.apa=
che.org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#a=
ssign(java.util.Collection)"><code>assign(Collection)</code></a>. In this c=
ase, dynamic partition
 assignment and consumer group coordination will be disabled.

 </p><h3><a name=3D"failuredetection">Detecting Consumer Failures</a></h3>

 After subscribing to a set of topics, the consumer will automatically join=
 the group when <a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/=
kafka/clients/consumer/KafkaConsumer.html#poll(long)"><code>poll(long)</cod=
e></a> is
 invoked. The poll API is designed to ensure consumer liveness. As long as =
you continue to call poll, the consumer
 will stay in the group and continue to receive messages from the partition=
s it was assigned. Underneath the covers,
 the poll API sends periodic heartbeats to the server; when you stop callin=
g poll (perhaps because an exception was thrown),
 then no heartbeats will be sent. If a period of the configured <i>session =
timeout</i> elapses before the server
 has received a heartbeat, then the consumer will be kicked out of the grou=
p and its partitions will be reassigned.
 This is designed to prevent situations where the consumer has failed, yet =
continues to hold onto the partitions
 it was assigned (thus preventing active consumers in the group from taking=
 them). To stay in the group, you
 have to prove you are still alive by calling poll.
 <p>
 The implication of this design is that message processing time in the poll=
 loop must be bounded so that
 heartbeats can be sent before expiration of the session timeout. What typi=
cally happens when processing time
 exceeds the session timeout is that the consumer won't be able to commit o=
ffsets for any of the processed records.
 For example, this is indicated by a <a href=3D"http://kafka.apache.org/010=
0/javadoc/org/apache/kafka/clients/consumer/CommitFailedException.html" tit=
le=3D"class in org.apache.kafka.clients.consumer"><code>CommitFailedExcepti=
on</code></a> thrown from <a href=3D"http://kafka.apache.org/0100/javadoc/o=
rg/apache/kafka/clients/consumer/KafkaConsumer.html#commitSync()"><code>com=
mitSync()</code></a>. This
 guarantees that only active members of the group are allowed to commit off=
sets. If the consumer
 has been kicked out of the group, then its partitions will have been assig=
ned to another member, which will be
 committing its own offsets as it handles new records. This gives offset co=
mmits an isolation guarantee.
 </p><p>
 The consumer provides two configuration settings to control this behavior:
 </p><ol>
     <li><code>session.timeout.ms</code>: By increasing the session timeout=
, you can give the consumer more
     time to handle a batch of records returned from <a href=3D"http://kafk=
a.apache.org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.h=
tml#poll(long)"><code>poll(long)</code></a>. The only drawback is that it
     will take longer for the server to detect hard consumer failures, whic=
h can cause a delay before
     a rebalance can be completed. However, clean shutdown with <a href=3D"=
http://kafka.apache.org/0100/javadoc/org/apache/kafka/clients/consumer/Kafk=
aConsumer.html#close()"><code>close()</code></a> is not impacted since
     the consumer will send an explicit message to the server to leave the =
group and cause an immediate
     rebalance.</li>
     <li><code>max.poll.records</code>: Processing time in the poll loop is=
 typically proportional to the number
     of records processed, so it's natural to want to set a limit on the nu=
mber of records handled at once.
     This setting provides that. By default, there is essentially no limit.=
</li>
 </ol>
 <p>
 For use cases where message processing time varies unpredictably, neither =
of these options may be viable.
 The recommended way to handle these cases is to move message processing to=
 another thread, which allows
 the consumer to continue sending heartbeats while the processor is still w=
orking. Some care must be taken
 to ensure that committed offsets do not get ahead of the actual position. =
Typically, you must disable automatic
 commits and manually commit processed offsets for records only after the t=
hread has finished handling them
 (depending on the delivery semantics you need). Note also that you will ge=
nerally need to <a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/=
kafka/clients/consumer/KafkaConsumer.html#pause(java.util.Collection)"><cod=
e>pause(Collection)</code></a>
 the partition so that no new records are received from poll until after th=
read has finished handling those
 previously returned.

 </p><h3>Usage Examples</h3>
 The consumer APIs offer flexibility to cover a variety of consumption use =
cases. Here are some examples to
 demonstrate how to use them.

 <h4>Automatic Offset Committing</h4>
 This example demonstrates a simple usage of Kafka's consumer api that rely=
ing on automatic offset committing.
 <p>
 </p><pre>     Properties props =3D new Properties();
     props.put("bootstrap.servers", "localhost:9092");
     props.put("group.id", "test");
     props.put("enable.auto.commit", "true");
     props.put("auto.commit.interval.ms", "1000");
     props.put("session.timeout.ms", "30000");
     props.put("key.deserializer", "org.apache.kafka.common.serialization.S=
tringDeserializer");
     props.put("value.deserializer", "org.apache.kafka.common.serialization=
.StringDeserializer");
     KafkaConsumer&lt;String, String&gt; consumer =3D new KafkaConsumer&lt;=
&gt;(props);
     consumer.subscribe(Arrays.asList("foo", "bar"));
     while (true) {
         ConsumerRecords&lt;String, String&gt; records =3D consumer.poll(10=
0);
         for (ConsumerRecord&lt;String, String&gt; record : records)
             System.out.printf("offset =3D %d, key =3D %s, value =3D %s", r=
ecord.offset(), record.key(), record.value());
     }
 </pre>

 Setting <code>enable.auto.commit</code> means that offsets are committed a=
utomatically with a frequency controlled by
 the config <code>auto.commit.interval.ms</code>.
 <p>
 The connection to the cluster is bootstrapped by specifying a list of one =
or more brokers to contact using the
 configuration <code>bootstrap.servers</code>. This list is just used to di=
scover the rest of the brokers in the
 cluster and need not be an exhaustive list of servers in the cluster (thou=
gh you may want to specify more than one in
 case there are servers down when the client is connecting).
 </p><p>
 In this example the client is subscribing to the topics <i>foo</i> and <i>=
bar</i> as part of a group of consumers
 called <i>test</i> as described above.
 </p><p>
 The broker will automatically detect failed processes in the <i>test</i> g=
roup by using a heartbeat mechanism. The
 consumer will automatically ping the cluster periodically, which lets the =
cluster know that it is alive. Note that
 the consumer is single-threaded, so periodic heartbeats can only be sent w=
hen <a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/client=
s/consumer/KafkaConsumer.html#poll(long)"><code>poll(long)</code></a> is ca=
lled. As long as
 the consumer is able to do this it is considered alive and retains the rig=
ht to consume from the partitions assigned
 to it. If it stops heartbeating by failing to call <a href=3D"http://kafka=
.apache.org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.ht=
ml#poll(long)"><code>poll(long)</code></a> for a period of time longer than=
 <code>session.timeout.ms</code>
 then it will be considered dead and its partitions will be assigned to ano=
ther process.
 </p><p>
 The deserializer settings specify how to turn bytes into objects. For exam=
ple, by specifying string deserializers, we
 are saying that our record's key and value will just be simple strings.

 </p><h4>Manual Offset Control</h4>

 Instead of relying on the consumer to periodically commit consumed offsets=
, users can also control when messages
 should be considered as consumed and hence commit their offsets. This is u=
seful when the consumption of the messages
 are coupled with some processing logic and hence a message should not be c=
onsidered as consumed until it is completed processing.
 In this example we will consume a batch of records and batch them up in me=
mory, when we have sufficient records
 batched we will insert them into a database. If we allowed offsets to auto=
 commit as in the previous example messages
 would be considered consumed after they were given out by the consumer, an=
d it would be possible that our process
 could fail after we have read messages into our in-memory buffer but befor=
e they had been inserted into the database.
 To avoid this we will manually commit the offsets only once the correspond=
ing messages have been inserted into the
 database. This gives us exact control of when a message is considered cons=
umed. This raises the opposite possibility:
 the process could fail in the interval after the insert into the database =
but before the commit (even though this
 would likely just be a few milliseconds, it is a possibility). In this cas=
e the process that took over consumption
 would consume from last committed offset and would repeat the insert of th=
e last batch of data. Used in this way
 Kafka provides what is often called "at-least once delivery" guarantees, a=
s each message will likely be delivered one
 time but in failure cases could be duplicated.
 <p>
 </p><pre>     Properties props =3D new Properties();
     props.put("bootstrap.servers", "localhost:9092");
     props.put("group.id", "test");
     props.put("enable.auto.commit", "false");
     props.put("auto.commit.interval.ms", "1000");
     props.put("session.timeout.ms", "30000");
     props.put("key.deserializer", "org.apache.kafka.common.serialization.S=
tringDeserializer");
     props.put("value.deserializer", "org.apache.kafka.common.serialization=
.StringDeserializer");
     KafkaConsumer&lt;String, String&gt; consumer =3D new KafkaConsumer&lt;=
&gt;(props);
     consumer.subscribe(Arrays.asList("foo", "bar"));
     final int minBatchSize =3D 200;
     List&lt;ConsumerRecord&lt;String, String&gt;&gt; buffer =3D new ArrayL=
ist&lt;&gt;();
     while (true) {
         ConsumerRecords&lt;String, String&gt; records =3D consumer.poll(10=
0);
         for (ConsumerRecord&lt;String, String&gt; record : records) {
             buffer.add(record);
         }
         if (buffer.size() &gt;=3D minBatchSize) {
             insertIntoDb(buffer);
             consumer.commitSync();
             buffer.clear();
         }
     }
 </pre>

 The above example uses <a href=3D"http://kafka.apache.org/0100/javadoc/org=
/apache/kafka/clients/consumer/KafkaConsumer.html#commitSync()"><code>commi=
tSync</code></a> to mark all received messages as committed. In some cases
 you may wish to have even finer control over which messages have been comm=
itted by specifying an offset explicitly.
 In the example below we commit offset after we finish handling the message=
s in each partition.
 <p>
 </p><pre>     try {
         while(running) {
             ConsumerRecords&lt;String, String&gt; records =3D consumer.pol=
l(Long.MAX_VALUE);
             for (TopicPartition partition : records.partitions()) {
                 List&lt;ConsumerRecord&lt;String, String&gt;&gt; partition=
Records =3D records.records(partition);
                 for (ConsumerRecord&lt;String, String&gt; record : partiti=
onRecords) {
                     System.out.println(record.offset() + ": " + record.val=
ue());
                 }
                 long lastOffset =3D partitionRecords.get(partitionRecords.=
size() - 1).offset();
                 consumer.commitSync(Collections.singletonMap(partition, ne=
w OffsetAndMetadata(lastOffset + 1)));
             }
         }
     } finally {
       consumer.close();
     }
 </pre>

 <b>Note: The committed offset should always be the offset of the next mess=
age that your application will read.</b>
 Thus, when calling <a href=3D"http://kafka.apache.org/0100/javadoc/org/apa=
che/kafka/clients/consumer/KafkaConsumer.html#commitSync(java.util.Map)"><c=
ode>commitSync(offsets)</code></a> you should add one to the offset of the =
last message processed.

 <h4><a name=3D"manualassignment">Manual Partition Assignment</a></h4>

 In the previous examples, we subscribed to the topics we were interested i=
n and let Kafka dynamically assign a
 fair share of the partitions for those topics based on the active consumer=
s in the group. However, in
 some cases you may need finer control over the specific partitions that ar=
e assigned. For example:
 <p>
 </p><ul>
 <li>If the process is maintaining some kind of local state associated with=
 that partition (like a
 local on-disk key-value store), then it should only get records for the pa=
rtition it is maintaining on disk.
 </li><li>If the process itself is highly available and will be restarted i=
f it fails (perhaps using a
 cluster management framework like YARN, Mesos, or AWS facilities, or as pa=
rt of a stream processing framework). In
 this case there is no need for Kafka to detect the failure and reassign th=
e partition since the consuming process
 will be restarted on another machine.
 </li></ul>
 <p>
 To use this mode, instead of subscribing to the topic using <a href=3D"htt=
p://kafka.apache.org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaCo=
nsumer.html#subscribe(java.util.Collection)"><code>subscribe</code></a>, yo=
u just call
 <a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/clients/c=
onsumer/KafkaConsumer.html#assign(java.util.Collection)"><code>assign(Colle=
ction)</code></a> with the full list of partitions that you want to consume=
.

 </p><pre>     String topic =3D "foo";
     TopicPartition partition0 =3D new TopicPartition(topic, 0);
     TopicPartition partition1 =3D new TopicPartition(topic, 1);
     consumer.assign(Arrays.asList(partition0, partition1));
 </pre>

 Once assigned, you can call <a href=3D"http://kafka.apache.org/0100/javado=
c/org/apache/kafka/clients/consumer/KafkaConsumer.html#poll(long)"><code>po=
ll</code></a> in a loop, just as in the preceding examples to consume
 records. The group that the consumer specifies is still used for committin=
g offsets, but now the set of partitions
 will only change with another call to <a href=3D"http://kafka.apache.org/0=
100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#assign(jav=
a.util.Collection)"><code>assign</code></a>. Manual partition assignment do=
es
 not use group coordination, so consumer failures will not cause assigned p=
artitions to be rebalanced. Each consumer
 acts independently even if it shares a groupId with another consumer. To a=
void offset commit conflicts, you should
 usually ensure that the groupId is unique for each consumer instance.
 <p>
 Note that it isn't possible to mix manual partition assignment (i.e. using=
 <a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/clients/c=
onsumer/KafkaConsumer.html#assign(java.util.Collection)"><code>assign</code=
></a>)
 with dynamic partition assignment through topic subscription (i.e. using <=
a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/clients/con=
sumer/KafkaConsumer.html#subscribe(java.util.Collection)"><code>subscribe</=
code></a>).

 </p><h4><a name=3D"rebalancecallback">Storing Offsets Outside Kafka</a></h=
4><a name=3D"rebalancecallback">

 The consumer application need not use Kafka's built-in offset storage, it =
can store offsets in a store of its own
 choosing. The primary use case for this is allowing the application to sto=
re both the offset and the results of the
 consumption in the same system in a way that both the results and offsets =
are stored atomically. This is not always
 possible, but when it is it will make the consumption fully atomic and giv=
e "exactly once" semantics that are
 stronger than the default "at-least once" semantics you get with Kafka's o=
ffset commit functionality.
 <p>
 Here are a couple of examples of this type of usage:
 </p><ul>
 <li>If the results of the consumption are being stored in a relational dat=
abase, storing the offset in the database
 as well can allow committing both the results and offset in a single trans=
action. Thus either the transaction will
 succeed and the offset will be updated based on what was consumed or the r=
esult will not be stored and the offset
 won't be updated.
 </li><li>If the results are being stored in a local store it may be possib=
le to store the offset there as well. For
 example a search index could be built by subscribing to a particular parti=
tion and storing both the offset and the
 indexed data together. If this is done in a way that is atomic, it is ofte=
n possible to have it be the case that even
 if a crash occurs that causes unsync'd data to be lost, whatever is left h=
as the corresponding offset stored as well.
 This means that in this case the indexing process that comes back having l=
ost recent updates just resumes indexing
 from what it has ensuring that no updates are lost.
 </li></ul>
 <p>
 Each record comes with its own offset, so to manage your own offset you ju=
st need to do the following:

 </p></a><ul><a name=3D"rebalancecallback">
 <li>Configure <code>enable.auto.commit=3Dfalse</code>
 </li></a><li><a name=3D"rebalancecallback">Use the offset provided with ea=
ch </a><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/cli=
ents/consumer/ConsumerRecord.html" title=3D"class in org.apache.kafka.clien=
ts.consumer"><code>ConsumerRecord</code></a> to save your position.
 </li><li>On restart restore the position of the consumer using <a href=3D"=
http://kafka.apache.org/0100/javadoc/org/apache/kafka/clients/consumer/Kafk=
aConsumer.html#seek(org.apache.kafka.common.TopicPartition,%20long)"><code>=
seek(TopicPartition, long)</code></a>.
 </li></ul>

 <p>
 This type of usage is simplest when the partition assignment is also done =
manually (this would be likely in the
 search index use case described above). If the partition assignment is don=
e automatically special care is
 needed to handle the case where partition assignments change. This can be =
done by providing a
 <a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/clients/c=
onsumer/ConsumerRebalanceListener.html" title=3D"interface in org.apache.ka=
fka.clients.consumer"><code>ConsumerRebalanceListener</code></a> instance i=
n the call to <a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/ka=
fka/clients/consumer/KafkaConsumer.html#subscribe(java.util.Collection,%20o=
rg.apache.kafka.clients.consumer.ConsumerRebalanceListener)"><code>subscrib=
e(Collection, ConsumerRebalanceListener)</code></a>
 and <a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/clien=
ts/consumer/KafkaConsumer.html#subscribe(java.util.regex.Pattern,%20org.apa=
che.kafka.clients.consumer.ConsumerRebalanceListener)"><code>subscribe(Patt=
ern, ConsumerRebalanceListener)</code></a>.
 For example, when partitions are taken from a consumer the consumer will w=
ant to commit its offset for those partitions by
 implementing <a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/ka=
fka/clients/consumer/ConsumerRebalanceListener.html#onPartitionsRevoked(jav=
a.util.Collection)"><code>ConsumerRebalanceListener.onPartitionsRevoked(Col=
lection)</code></a>. When partitions are assigned to a
 consumer, the consumer will want to look up the offset for those new parti=
tions and correctly initialize the consumer
 to that position by implementing <a href=3D"http://kafka.apache.org/0100/j=
avadoc/org/apache/kafka/clients/consumer/ConsumerRebalanceListener.html#onP=
artitionsAssigned(java.util.Collection)"><code>ConsumerRebalanceListener.on=
PartitionsAssigned(Collection)</code></a>.
 </p><p>
 Another common use for <a href=3D"http://kafka.apache.org/0100/javadoc/org=
/apache/kafka/clients/consumer/ConsumerRebalanceListener.html" title=3D"int=
erface in org.apache.kafka.clients.consumer"><code>ConsumerRebalanceListene=
r</code></a> is to flush any caches the application maintains for
 partitions that are moved elsewhere.

 </p><h4>Controlling The Consumer's Position</h4>

 In most use cases the consumer will simply consume records from beginning =
to end, periodically committing its
 position (either automatically or manually). However Kafka allows the cons=
umer to manually control its position,
 moving forward or backwards in a partition at will. This means a consumer =
can re-consume older records, or skip to
 the most recent records without actually consuming the intermediate record=
s.
 <p>
 There are several instances where manually controlling the consumer's posi=
tion can be useful.
 </p><p>
 One case is for time-sensitive record processing it may make sense for a c=
onsumer that falls far enough behind to not
 attempt to catch up processing all records, but rather just skip to the mo=
st recent records.
 </p><p>
 Another use case is for a system that maintains local state as described i=
n the previous section. In such a system
 the consumer will want to initialize its position on start-up to whatever =
is contained in the local store. Likewise
 if the local state is destroyed (say because the disk is lost) the state m=
ay be recreated on a new machine by
 re-consuming all the data and recreating the state (assuming that Kafka is=
 retaining sufficient history).
 </p><p>
 Kafka allows specifying the position using <a href=3D"http://kafka.apache.=
org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#seek(=
org.apache.kafka.common.TopicPartition,%20long)"><code>seek(TopicPartition,=
 long)</code></a> to specify the new position. Special
 methods for seeking to the earliest and latest offset the server maintains=
 are also available (
 <a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/clients/c=
onsumer/KafkaConsumer.html#seekToBeginning(java.util.Collection)"><code>see=
kToBeginning(Collection)</code></a> and <a href=3D"http://kafka.apache.org/=
0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#seekToEnd=
(java.util.Collection)"><code>seekToEnd(Collection)</code></a> respectively=
).

 </p><h4>Consumption Flow Control</h4>

 If a consumer is assigned multiple partitions to fetch data from, it will =
try to consume from all of them at the same time,
 effectively giving these partitions the same priority for consumption. How=
ever in some cases consumers may want to
 first focus on fetching from some subset of the assigned partitions at ful=
l speed, and only start fetching other partitions
 when these partitions have few or no data to consume.

 <p>
 One of such cases is stream processing, where processor fetches from two t=
opics and performs the join on these two streams.
 When one of the topics is long lagging behind the other, the processor wou=
ld like to pause fetching from the ahead topic
 in order to get the lagging stream to catch up. Another example is bootstr=
aping upon consumer starting up where there are
 a lot of history data to catch up, the applications usually want to get th=
e latest data on some of the topics before consider
 fetching other topics.

 </p><p>
 Kafka supports dynamic controlling of consumption flows by using <a href=
=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/clients/consumer/=
KafkaConsumer.html#pause(java.util.Collection)"><code>pause(Collection)</co=
de></a> and <a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafk=
a/clients/consumer/KafkaConsumer.html#resume(java.util.Collection)"><code>r=
esume(Collection)</code></a>
 to pause the consumption on the specified assigned partitions and resume t=
he consumption
 on the specified paused partitions respectively in the future <a href=3D"h=
ttp://kafka.apache.org/0100/javadoc/org/apache/kafka/clients/consumer/Kafka=
Consumer.html#poll(long)"><code>poll(long)</code></a> calls.

 </p><h3><a name=3D"multithreaded">Multi-threaded Processing</a></h3>

 The Kafka consumer is NOT thread-safe. All network I/O happens in the thre=
ad of the application
 making the call. It is the responsibility of the user to ensure that multi=
-threaded access
 is properly synchronized. Un-synchronized access will result in <a href=3D=
"http://docs.oracle.com/javase/7/docs/api/java/util/ConcurrentModificationE=
xception.html?is-external=3Dtrue" title=3D"class or interface in java.util"=
><code>ConcurrentModificationException</code></a>.

 <p>
 The only exception to this rule is <a href=3D"http://kafka.apache.org/0100=
/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#wakeup()"><co=
de>wakeup()</code></a>, which can safely be used from an external thread to
 interrupt an active operation. In this case, a <a href=3D"http://kafka.apa=
che.org/0100/javadoc/org/apache/kafka/common/errors/WakeupException.html" t=
itle=3D"class in org.apache.kafka.common.errors"><code>WakeupException</cod=
e></a> will be
 thrown from the thread blocking on the operation. This can be used to shut=
down the consumer from another thread.
 The following snippet shows the typical pattern:

 </p><pre> public class KafkaConsumerRunner implements Runnable {
     private final AtomicBoolean closed =3D new AtomicBoolean(false);
     private final KafkaConsumer consumer;

     public void run() {
         try {
             consumer.subscribe(Arrays.asList("topic"));
             while (!closed.get()) {
                 ConsumerRecords records =3D consumer.poll(10000);
                 // Handle new records
             }
         } catch (WakeupException e) {
             // Ignore exception if closing
             if (!closed.get()) throw e;
         } finally {
             consumer.close();
         }
     }

     // Shutdown hook which can be called from a separate thread
     public void shutdown() {
         closed.set(true);
         consumer.wakeup();
     }
 }
 </pre>

 Then in a separate thread, the consumer can be shutdown by setting the clo=
sed flag and waking up the consumer.

 <p>
 </p><pre>     closed.set(true);
     consumer.wakeup();
 </pre>

 <p>
 We have intentionally avoided implementing a particular threading model fo=
r processing. This leaves several
 options for implementing multi-threaded processing of records.


 </p><h4>1. One Consumer Per Thread</h4>

 A simple option is to give each thread its own consumer instance. Here are=
 the pros and cons of this approach:
 <ul>
 <li><b>PRO</b>: It is the easiest to implement
 </li><li><b>PRO</b>: It is often the fastest as no inter-thread co-ordinat=
ion is needed
 </li><li><b>PRO</b>: It makes in-order processing on a per-partition basis=
 very easy to implement (each thread just
 processes messages in the order it receives them).
 </li><li><b>CON</b>: More consumers means more TCP connections to the clus=
ter (one per thread). In general Kafka handles
 connections very efficiently so this is generally a small cost.
 </li><li><b>CON</b>: Multiple consumers means more requests being sent to =
the server and slightly less batching of data
 which can cause some drop in I/O throughput.
 </li><li><b>CON</b>: The number of total threads across all processes will=
 be limited by the total number of partitions.
 </li></ul>

 <h4>2. Decouple Consumption and Processing</h4>

 Another alternative is to have one or more consumer threads that do all da=
ta consumption and hands off
 <a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/clients/c=
onsumer/ConsumerRecords.html" title=3D"class in org.apache.kafka.clients.co=
nsumer"><code>ConsumerRecords</code></a> instances to a blocking queue cons=
umed by a pool of processor threads that actually handle
 the record processing.

 This option likewise has pros and cons:
 <ul>
 <li><b>PRO</b>: This option allows independently scaling the number of con=
sumers and processors. This makes it
 possible to have a single consumer that feeds many processor threads, avoi=
ding any limitation on partitions.
 </li><li><b>CON</b>: Guaranteeing order across the processors requires par=
ticular care as the threads will execute
 independently an earlier chunk of data may actually be processed after a l=
ater chunk of data just due to the luck of
 thread execution timing. For processing that has no ordering requirements =
this is not a problem.
 </li><li><b>CON</b>: Manually committing the position becomes harder as it=
 requires that all threads co-ordinate to ensure
 that processing is complete for that partition.
 </li></ul>

 There are many possible variations on this approach. For example each proc=
essor thread can have its own queue, and
 the consumer threads can hash into these queues using the TopicPartition t=
o ensure in-order consumption and simplify
 commit.</div>
</li>
</ul>
</div>
<div class=3D"summary">
<ul class=3D"blockList">
<li class=3D"blockList">
<!-- =3D=3D=3D=3D=3D=3D=3D=3D CONSTRUCTOR SUMMARY =3D=3D=3D=3D=3D=3D=3D=3D =
-->
<ul class=3D"blockList">
<li class=3D"blockList"><a name=3D"constructor_summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class=3D"overviewSummary" border=3D"0" cellpadding=3D"3" cellspacing=
=3D"0" summary=3D"Constructor Summary table, listing constructors, and an e=
xplanation">
<caption><span>Constructors</span><span class=3D"tabEnd">&nbsp;</span></cap=
tion>
<tbody><tr>
<th class=3D"colOne" scope=3D"col">Constructor and Description</th>
</tr>
<tr class=3D"altColor">
<td class=3D"colOne"><code><strong><a href=3D"http://kafka.apache.org/0100/=
javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#KafkaConsumer(=
java.util.Map)">KafkaConsumer</a></strong>(<a href=3D"http://docs.oracle.co=
m/javase/7/docs/api/java/util/Map.html?is-external=3Dtrue" title=3D"class o=
r interface in java.util">Map</a>&lt;<a href=3D"http://docs.oracle.com/java=
se/7/docs/api/java/lang/String.html?is-external=3Dtrue" title=3D"class or i=
nterface in java.lang">String</a>,<a href=3D"http://docs.oracle.com/javase/=
7/docs/api/java/lang/Object.html?is-external=3Dtrue" title=3D"class or inte=
rface in java.lang">Object</a>&gt;&nbsp;configs)</code>
<div class=3D"block">A consumer is instantiated by providing a set of key-v=
alue pairs as configuration.</div>
</td>
</tr>
<tr class=3D"rowColor">
<td class=3D"colOne"><code><strong><a href=3D"http://kafka.apache.org/0100/=
javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#KafkaConsumer(=
java.util.Map,%20org.apache.kafka.common.serialization.Deserializer,%20org.=
apache.kafka.common.serialization.Deserializer)">KafkaConsumer</a></strong>=
(<a href=3D"http://docs.oracle.com/javase/7/docs/api/java/util/Map.html?is-=
external=3Dtrue" title=3D"class or interface in java.util">Map</a>&lt;<a hr=
ef=3D"http://docs.oracle.com/javase/7/docs/api/java/lang/String.html?is-ext=
ernal=3Dtrue" title=3D"class or interface in java.lang">String</a>,<a href=
=3D"http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-exter=
nal=3Dtrue" title=3D"class or interface in java.lang">Object</a>&gt;&nbsp;c=
onfigs,
             <a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kaf=
ka/common/serialization/Deserializer.html" title=3D"interface in org.apache=
.kafka.common.serialization">Deserializer</a>&lt;<a href=3D"http://kafka.ap=
ache.org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html"=
 title=3D"type parameter in KafkaConsumer">K</a>&gt;&nbsp;keyDeserializer,
             <a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kaf=
ka/common/serialization/Deserializer.html" title=3D"interface in org.apache=
.kafka.common.serialization">Deserializer</a>&lt;<a href=3D"http://kafka.ap=
ache.org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html"=
 title=3D"type parameter in KafkaConsumer">V</a>&gt;&nbsp;valueDeserializer=
)</code>
<div class=3D"block">A consumer is instantiated by providing a set of key-v=
alue pairs as configuration, and a key and a value <a href=3D"http://kafka.=
apache.org/0100/javadoc/org/apache/kafka/common/serialization/Deserializer.=
html" title=3D"interface in org.apache.kafka.common.serialization"><code>De=
serializer</code></a>.</div>
</td>
</tr>
<tr class=3D"altColor">
<td class=3D"colOne"><code><strong><a href=3D"http://kafka.apache.org/0100/=
javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#KafkaConsumer(=
java.util.Properties)">KafkaConsumer</a></strong>(<a href=3D"http://docs.or=
acle.com/javase/7/docs/api/java/util/Properties.html?is-external=3Dtrue" ti=
tle=3D"class or interface in java.util">Properties</a>&nbsp;properties)</co=
de>
<div class=3D"block">A consumer is instantiated by providing a <a href=3D"h=
ttp://docs.oracle.com/javase/7/docs/api/java/util/Properties.html?is-extern=
al=3Dtrue" title=3D"class or interface in java.util"><code>Properties</code=
></a> object as configuration.</div>
</td>
</tr>
<tr class=3D"rowColor">
<td class=3D"colOne"><code><strong><a href=3D"http://kafka.apache.org/0100/=
javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#KafkaConsumer(=
java.util.Properties,%20org.apache.kafka.common.serialization.Deserializer,=
%20org.apache.kafka.common.serialization.Deserializer)">KafkaConsumer</a></=
strong>(<a href=3D"http://docs.oracle.com/javase/7/docs/api/java/util/Prope=
rties.html?is-external=3Dtrue" title=3D"class or interface in java.util">Pr=
operties</a>&nbsp;properties,
             <a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kaf=
ka/common/serialization/Deserializer.html" title=3D"interface in org.apache=
.kafka.common.serialization">Deserializer</a>&lt;<a href=3D"http://kafka.ap=
ache.org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html"=
 title=3D"type parameter in KafkaConsumer">K</a>&gt;&nbsp;keyDeserializer,
             <a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kaf=
ka/common/serialization/Deserializer.html" title=3D"interface in org.apache=
.kafka.common.serialization">Deserializer</a>&lt;<a href=3D"http://kafka.ap=
ache.org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html"=
 title=3D"type parameter in KafkaConsumer">V</a>&gt;&nbsp;valueDeserializer=
)</code>
<div class=3D"block">A consumer is instantiated by providing a <a href=3D"h=
ttp://docs.oracle.com/javase/7/docs/api/java/util/Properties.html?is-extern=
al=3Dtrue" title=3D"class or interface in java.util"><code>Properties</code=
></a> object as configuration, and a
 key and a value <a href=3D"http://kafka.apache.org/0100/javadoc/org/apache=
/kafka/common/serialization/Deserializer.html" title=3D"interface in org.ap=
ache.kafka.common.serialization"><code>Deserializer</code></a>.</div>
</td>
</tr>
</tbody></table>
</li>
</ul>
<!-- =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D METHOD SUMMARY =3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D -->
<ul class=3D"blockList">
<li class=3D"blockList"><a name=3D"method_summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class=3D"overviewSummary" border=3D"0" cellpadding=3D"3" cellspacing=
=3D"0" summary=3D"Method Summary table, listing methods, and an explanation=
">
<caption><span>Methods</span><span class=3D"tabEnd">&nbsp;</span></caption>
<tbody><tr>
<th class=3D"colFirst" scope=3D"col">Modifier and Type</th>
<th class=3D"colLast" scope=3D"col">Method and Description</th>
</tr>
<tr class=3D"altColor">
<td class=3D"colFirst"><code>void</code></td>
<td class=3D"colLast"><code><strong><a href=3D"http://kafka.apache.org/0100=
/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#assign(java.u=
til.Collection)">assign</a></strong>(<a href=3D"http://docs.oracle.com/java=
se/7/docs/api/java/util/Collection.html?is-external=3Dtrue" title=3D"class =
or interface in java.util">Collection</a>&lt;<a href=3D"http://kafka.apache=
.org/0100/javadoc/org/apache/kafka/common/TopicPartition.html" title=3D"cla=
ss in org.apache.kafka.common">TopicPartition</a>&gt;&nbsp;partitions)</cod=
e>
<div class=3D"block">Manually assign a list of partition to this consumer.<=
/div>
</td>
</tr>
<tr class=3D"rowColor">
<td class=3D"colFirst"><code><a href=3D"http://docs.oracle.com/javase/7/doc=
s/api/java/util/Set.html?is-external=3Dtrue" title=3D"class or interface in=
 java.util">Set</a>&lt;<a href=3D"http://kafka.apache.org/0100/javadoc/org/=
apache/kafka/common/TopicPartition.html" title=3D"class in org.apache.kafka=
.common">TopicPartition</a>&gt;</code></td>
<td class=3D"colLast"><code><strong><a href=3D"http://kafka.apache.org/0100=
/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#assignment()"=
>assignment</a></strong>()</code>
<div class=3D"block">Get the set of partitions currently assigned to this c=
onsumer.</div>
</td>
</tr>
<tr class=3D"altColor">
<td class=3D"colFirst"><code>void</code></td>
<td class=3D"colLast"><code><strong><a href=3D"http://kafka.apache.org/0100=
/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#close()">clos=
e</a></strong>()</code>
<div class=3D"block">Close the consumer, waiting indefinitely for any neede=
d cleanup.</div>
</td>
</tr>
<tr class=3D"rowColor">
<td class=3D"colFirst"><code>void</code></td>
<td class=3D"colLast"><code><strong><a href=3D"http://kafka.apache.org/0100=
/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#commitAsync()=
">commitAsync</a></strong>()</code>
<div class=3D"block">Commit offsets returned on the last <a href=3D"http://=
kafka.apache.org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsum=
er.html#poll(long)"><code>poll()</code></a> for all the subscribed list of =
topics and partition.</div>
</td>
</tr>
<tr class=3D"altColor">
<td class=3D"colFirst"><code>void</code></td>
<td class=3D"colLast"><code><strong><a href=3D"http://kafka.apache.org/0100=
/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#commitAsync(j=
ava.util.Map,%20org.apache.kafka.clients.consumer.OffsetCommitCallback)">co=
mmitAsync</a></strong>(<a href=3D"http://docs.oracle.com/javase/7/docs/api/=
java/util/Map.html?is-external=3Dtrue" title=3D"class or interface in java.=
util">Map</a>&lt;<a href=3D"http://kafka.apache.org/0100/javadoc/org/apache=
/kafka/common/TopicPartition.html" title=3D"class in org.apache.kafka.commo=
n">TopicPartition</a>,<a href=3D"http://kafka.apache.org/0100/javadoc/org/a=
pache/kafka/clients/consumer/OffsetAndMetadata.html" title=3D"class in org.=
apache.kafka.clients.consumer">OffsetAndMetadata</a>&gt;&nbsp;offsets,
           <a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka=
/clients/consumer/OffsetCommitCallback.html" title=3D"interface in org.apac=
he.kafka.clients.consumer">OffsetCommitCallback</a>&nbsp;callback)</code>
<div class=3D"block">Commit the specified offsets for the specified list of=
 topics and partitions to Kafka.</div>
</td>
</tr>
<tr class=3D"rowColor">
<td class=3D"colFirst"><code>void</code></td>
<td class=3D"colLast"><code><strong><a href=3D"http://kafka.apache.org/0100=
/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#commitAsync(o=
rg.apache.kafka.clients.consumer.OffsetCommitCallback)">commitAsync</a></st=
rong>(<a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/clie=
nts/consumer/OffsetCommitCallback.html" title=3D"interface in org.apache.ka=
fka.clients.consumer">OffsetCommitCallback</a>&nbsp;callback)</code>
<div class=3D"block">Commit offsets returned on the last <a href=3D"http://=
kafka.apache.org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsum=
er.html#poll(long)"><code>poll()</code></a> for the subscribed list of topi=
cs and partitions.</div>
</td>
</tr>
<tr class=3D"altColor">
<td class=3D"colFirst"><code>void</code></td>
<td class=3D"colLast"><code><strong><a href=3D"http://kafka.apache.org/0100=
/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#commitSync()"=
>commitSync</a></strong>()</code>
<div class=3D"block">Commit offsets returned on the last <a href=3D"http://=
kafka.apache.org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsum=
er.html#poll(long)"><code>poll()</code></a> for all the subscribed list of =
topics and partitions.</div>
</td>
</tr>
<tr class=3D"rowColor">
<td class=3D"colFirst"><code>void</code></td>
<td class=3D"colLast"><code><strong><a href=3D"http://kafka.apache.org/0100=
/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#commitSync(ja=
va.util.Map)">commitSync</a></strong>(<a href=3D"http://docs.oracle.com/jav=
ase/7/docs/api/java/util/Map.html?is-external=3Dtrue" title=3D"class or int=
erface in java.util">Map</a>&lt;<a href=3D"http://kafka.apache.org/0100/jav=
adoc/org/apache/kafka/common/TopicPartition.html" title=3D"class in org.apa=
che.kafka.common">TopicPartition</a>,<a href=3D"http://kafka.apache.org/010=
0/javadoc/org/apache/kafka/clients/consumer/OffsetAndMetadata.html" title=
=3D"class in org.apache.kafka.clients.consumer">OffsetAndMetadata</a>&gt;&n=
bsp;offsets)</code>
<div class=3D"block">Commit the specified offsets for the specified list of=
 topics and partitions.</div>
</td>
</tr>
<tr class=3D"altColor">
<td class=3D"colFirst"><code><a href=3D"http://kafka.apache.org/0100/javado=
c/org/apache/kafka/clients/consumer/OffsetAndMetadata.html" title=3D"class =
in org.apache.kafka.clients.consumer">OffsetAndMetadata</a></code></td>
<td class=3D"colLast"><code><strong><a href=3D"http://kafka.apache.org/0100=
/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#committed(org=
.apache.kafka.common.TopicPartition)">committed</a></strong>(<a href=3D"htt=
p://kafka.apache.org/0100/javadoc/org/apache/kafka/common/TopicPartition.ht=
ml" title=3D"class in org.apache.kafka.common">TopicPartition</a>&nbsp;part=
ition)</code>
<div class=3D"block">Get the last committed offset for the given partition =
(whether the commit happened by this process or
 another).</div>
</td>
</tr>
<tr class=3D"rowColor">
<td class=3D"colFirst"><code><a href=3D"http://docs.oracle.com/javase/7/doc=
s/api/java/util/Map.html?is-external=3Dtrue" title=3D"class or interface in=
 java.util">Map</a>&lt;<a href=3D"http://docs.oracle.com/javase/7/docs/api/=
java/lang/String.html?is-external=3Dtrue" title=3D"class or interface in ja=
va.lang">String</a>,<a href=3D"http://docs.oracle.com/javase/7/docs/api/jav=
a/util/List.html?is-external=3Dtrue" title=3D"class or interface in java.ut=
il">List</a>&lt;<a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/=
kafka/common/PartitionInfo.html" title=3D"class in org.apache.kafka.common"=
>PartitionInfo</a>&gt;&gt;</code></td>
<td class=3D"colLast"><code><strong><a href=3D"http://kafka.apache.org/0100=
/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#listTopics()"=
>listTopics</a></strong>()</code>
<div class=3D"block">Get metadata about partitions for all topics that the =
user is authorized to view.</div>
</td>
</tr>
<tr class=3D"altColor">
<td class=3D"colFirst"><code><a href=3D"http://docs.oracle.com/javase/7/doc=
s/api/java/util/Map.html?is-external=3Dtrue" title=3D"class or interface in=
 java.util">Map</a>&lt;<a href=3D"http://kafka.apache.org/0100/javadoc/org/=
apache/kafka/common/MetricName.html" title=3D"class in org.apache.kafka.com=
mon">MetricName</a>,? extends <a href=3D"http://kafka.apache.org/0100/javad=
oc/org/apache/kafka/common/Metric.html" title=3D"interface in org.apache.ka=
fka.common">Metric</a>&gt;</code></td>
<td class=3D"colLast"><code><strong><a href=3D"http://kafka.apache.org/0100=
/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#metrics()">me=
trics</a></strong>()</code>
<div class=3D"block">Get the metrics kept by the consumer</div>
</td>
</tr>
<tr class=3D"rowColor">
<td class=3D"colFirst"><code><a href=3D"http://docs.oracle.com/javase/7/doc=
s/api/java/util/List.html?is-external=3Dtrue" title=3D"class or interface i=
n java.util">List</a>&lt;<a href=3D"http://kafka.apache.org/0100/javadoc/or=
g/apache/kafka/common/PartitionInfo.html" title=3D"class in org.apache.kafk=
a.common">PartitionInfo</a>&gt;</code></td>
<td class=3D"colLast"><code><strong><a href=3D"http://kafka.apache.org/0100=
/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#partitionsFor=
(java.lang.String)">partitionsFor</a></strong>(<a href=3D"http://docs.oracl=
e.com/javase/7/docs/api/java/lang/String.html?is-external=3Dtrue" title=3D"=
class or interface in java.lang">String</a>&nbsp;topic)</code>
<div class=3D"block">Get metadata about the partitions for a given topic.</=
div>
</td>
</tr>
<tr class=3D"altColor">
<td class=3D"colFirst"><code>void</code></td>
<td class=3D"colLast"><code><strong><a href=3D"http://kafka.apache.org/0100=
/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#pause(java.ut=
il.Collection)">pause</a></strong>(<a href=3D"http://docs.oracle.com/javase=
/7/docs/api/java/util/Collection.html?is-external=3Dtrue" title=3D"class or=
 interface in java.util">Collection</a>&lt;<a href=3D"http://kafka.apache.o=
rg/0100/javadoc/org/apache/kafka/common/TopicPartition.html" title=3D"class=
 in org.apache.kafka.common">TopicPartition</a>&gt;&nbsp;partitions)</code>
<div class=3D"block">Suspend fetching from the requested partitions.</div>
</td>
</tr>
<tr class=3D"rowColor">
<td class=3D"colFirst"><code><a href=3D"http://docs.oracle.com/javase/7/doc=
s/api/java/util/Set.html?is-external=3Dtrue" title=3D"class or interface in=
 java.util">Set</a>&lt;<a href=3D"http://kafka.apache.org/0100/javadoc/org/=
apache/kafka/common/TopicPartition.html" title=3D"class in org.apache.kafka=
.common">TopicPartition</a>&gt;</code></td>
<td class=3D"colLast"><code><strong><a href=3D"http://kafka.apache.org/0100=
/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#paused()">pau=
sed</a></strong>()</code>
<div class=3D"block">Get the set of partitions that were previously paused =
by a call to <a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kaf=
ka/clients/consumer/KafkaConsumer.html#pause(java.util.Collection)"><code>p=
ause(Collection)</code></a>.</div>
</td>
</tr>
<tr class=3D"altColor">
<td class=3D"colFirst"><code><a href=3D"http://kafka.apache.org/0100/javado=
c/org/apache/kafka/clients/consumer/ConsumerRecords.html" title=3D"class in=
 org.apache.kafka.clients.consumer">ConsumerRecords</a>&lt;<a href=3D"http:=
//kafka.apache.org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaCons=
umer.html" title=3D"type parameter in KafkaConsumer">K</a>,<a href=3D"http:=
//kafka.apache.org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaCons=
umer.html" title=3D"type parameter in KafkaConsumer">V</a>&gt;</code></td>
<td class=3D"colLast"><code><strong><a href=3D"http://kafka.apache.org/0100=
/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#poll(long)">p=
oll</a></strong>(long&nbsp;timeout)</code>
<div class=3D"block">Fetch data for the topics or partitions specified usin=
g one of the subscribe/assign APIs.</div>
</td>
</tr>
<tr class=3D"rowColor">
<td class=3D"colFirst"><code>long</code></td>
<td class=3D"colLast"><code><strong><a href=3D"http://kafka.apache.org/0100=
/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#position(org.=
apache.kafka.common.TopicPartition)">position</a></strong>(<a href=3D"http:=
//kafka.apache.org/0100/javadoc/org/apache/kafka/common/TopicPartition.html=
" title=3D"class in org.apache.kafka.common">TopicPartition</a>&nbsp;partit=
ion)</code>
<div class=3D"block">Get the offset of the <i>next record</i> that will be =
fetched (if a record with that offset exists).</div>
</td>
</tr>
<tr class=3D"altColor">
<td class=3D"colFirst"><code>void</code></td>
<td class=3D"colLast"><code><strong><a href=3D"http://kafka.apache.org/0100=
/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#resume(java.u=
til.Collection)">resume</a></strong>(<a href=3D"http://docs.oracle.com/java=
se/7/docs/api/java/util/Collection.html?is-external=3Dtrue" title=3D"class =
or interface in java.util">Collection</a>&lt;<a href=3D"http://kafka.apache=
.org/0100/javadoc/org/apache/kafka/common/TopicPartition.html" title=3D"cla=
ss in org.apache.kafka.common">TopicPartition</a>&gt;&nbsp;partitions)</cod=
e>
<div class=3D"block">Resume specified partitions which have been paused wit=
h <a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/clients/=
consumer/KafkaConsumer.html#pause(java.util.Collection)"><code>pause(Collec=
tion)</code></a>.</div>
</td>
</tr>
<tr class=3D"rowColor">
<td class=3D"colFirst"><code>void</code></td>
<td class=3D"colLast"><code><strong><a href=3D"http://kafka.apache.org/0100=
/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#seek(org.apac=
he.kafka.common.TopicPartition,%20long)">seek</a></strong>(<a href=3D"http:=
//kafka.apache.org/0100/javadoc/org/apache/kafka/common/TopicPartition.html=
" title=3D"class in org.apache.kafka.common">TopicPartition</a>&nbsp;partit=
ion,
    long&nbsp;offset)</code>
<div class=3D"block">Overrides the fetch offsets that the consumer will use=
 on the next <a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kaf=
ka/clients/consumer/KafkaConsumer.html#poll(long)"><code>poll(timeout)</cod=
e></a>.</div>
</td>
</tr>
<tr class=3D"altColor">
<td class=3D"colFirst"><code>void</code></td>
<td class=3D"colLast"><code><strong><a href=3D"http://kafka.apache.org/0100=
/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#seekToBeginni=
ng(java.util.Collection)">seekToBeginning</a></strong>(<a href=3D"http://do=
cs.oracle.com/javase/7/docs/api/java/util/Collection.html?is-external=3Dtru=
e" title=3D"class or interface in java.util">Collection</a>&lt;<a href=3D"h=
ttp://kafka.apache.org/0100/javadoc/org/apache/kafka/common/TopicPartition.=
html" title=3D"class in org.apache.kafka.common">TopicPartition</a>&gt;&nbs=
p;partitions)</code>
<div class=3D"block">Seek to the first offset for each of the given partiti=
ons.</div>
</td>
</tr>
<tr class=3D"rowColor">
<td class=3D"colFirst"><code>void</code></td>
<td class=3D"colLast"><code><strong><a href=3D"http://kafka.apache.org/0100=
/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#seekToEnd(jav=
a.util.Collection)">seekToEnd</a></strong>(<a href=3D"http://docs.oracle.co=
m/javase/7/docs/api/java/util/Collection.html?is-external=3Dtrue" title=3D"=
class or interface in java.util">Collection</a>&lt;<a href=3D"http://kafka.=
apache.org/0100/javadoc/org/apache/kafka/common/TopicPartition.html" title=
=3D"class in org.apache.kafka.common">TopicPartition</a>&gt;&nbsp;partition=
s)</code>
<div class=3D"block">Seek to the last offset for each of the given partitio=
ns.</div>
</td>
</tr>
<tr class=3D"altColor">
<td class=3D"colFirst"><code>void</code></td>
<td class=3D"colLast"><code><strong><a href=3D"http://kafka.apache.org/0100=
/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#subscribe(jav=
a.util.Collection)">subscribe</a></strong>(<a href=3D"http://docs.oracle.co=
m/javase/7/docs/api/java/util/Collection.html?is-external=3Dtrue" title=3D"=
class or interface in java.util">Collection</a>&lt;<a href=3D"http://docs.o=
racle.com/javase/7/docs/api/java/lang/String.html?is-external=3Dtrue" title=
=3D"class or interface in java.lang">String</a>&gt;&nbsp;topics)</code>
<div class=3D"block">Subscribe to the given list of topics to get dynamical=
ly assigned partitions.</div>
</td>
</tr>
<tr class=3D"rowColor">
<td class=3D"colFirst"><code>void</code></td>
<td class=3D"colLast"><code><strong><a href=3D"http://kafka.apache.org/0100=
/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#subscribe(jav=
a.util.Collection,%20org.apache.kafka.clients.consumer.ConsumerRebalanceLis=
tener)">subscribe</a></strong>(<a href=3D"http://docs.oracle.com/javase/7/d=
ocs/api/java/util/Collection.html?is-external=3Dtrue" title=3D"class or int=
erface in java.util">Collection</a>&lt;<a href=3D"http://docs.oracle.com/ja=
vase/7/docs/api/java/lang/String.html?is-external=3Dtrue" title=3D"class or=
 interface in java.lang">String</a>&gt;&nbsp;topics,
         <a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/c=
lients/consumer/ConsumerRebalanceListener.html" title=3D"interface in org.a=
pache.kafka.clients.consumer">ConsumerRebalanceListener</a>&nbsp;listener)<=
/code>
<div class=3D"block">Subscribe to the given list of topics to get dynamical=
ly
 assigned partitions.</div>
</td>
</tr>
<tr class=3D"altColor">
<td class=3D"colFirst"><code>void</code></td>
<td class=3D"colLast"><code><strong><a href=3D"http://kafka.apache.org/0100=
/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#subscribe(jav=
a.util.regex.Pattern,%20org.apache.kafka.clients.consumer.ConsumerRebalance=
Listener)">subscribe</a></strong>(<a href=3D"http://docs.oracle.com/javase/=
7/docs/api/java/util/regex/Pattern.html?is-external=3Dtrue" title=3D"class =
or interface in java.util.regex">Pattern</a>&nbsp;pattern,
         <a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/c=
lients/consumer/ConsumerRebalanceListener.html" title=3D"interface in org.a=
pache.kafka.clients.consumer">ConsumerRebalanceListener</a>&nbsp;listener)<=
/code>
<div class=3D"block">Subscribe to all topics matching specified pattern to =
get dynamically assigned partitions.</div>
</td>
</tr>
<tr class=3D"rowColor">
<td class=3D"colFirst"><code><a href=3D"http://docs.oracle.com/javase/7/doc=
s/api/java/util/Set.html?is-external=3Dtrue" title=3D"class or interface in=
 java.util">Set</a>&lt;<a href=3D"http://docs.oracle.com/javase/7/docs/api/=
java/lang/String.html?is-external=3Dtrue" title=3D"class or interface in ja=
va.lang">String</a>&gt;</code></td>
<td class=3D"colLast"><code><strong><a href=3D"http://kafka.apache.org/0100=
/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#subscription(=
)">subscription</a></strong>()</code>
<div class=3D"block">Get the current subscription.</div>
</td>
</tr>
<tr class=3D"altColor">
<td class=3D"colFirst"><code>void</code></td>
<td class=3D"colLast"><code><strong><a href=3D"http://kafka.apache.org/0100=
/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#unsubscribe()=
">unsubscribe</a></strong>()</code>
<div class=3D"block">Unsubscribe from topics currently subscribed with <a h=
ref=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/clients/consum=
er/KafkaConsumer.html#subscribe(java.util.Collection)"><code>subscribe(Coll=
ection)</code></a>.</div>
</td>
</tr>
<tr class=3D"rowColor">
<td class=3D"colFirst"><code>void</code></td>
<td class=3D"colLast"><code><strong><a href=3D"http://kafka.apache.org/0100=
/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#wakeup()">wak=
eup</a></strong>()</code>
<div class=3D"block">Wakeup the consumer.</div>
</td>
</tr>
</tbody></table>
<ul class=3D"blockList">
<li class=3D"blockList"><a name=3D"methods_inherited_from_class_java.lang.O=
bject">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.<a href=3D"http://docs.orac=
le.com/javase/7/docs/api/java/lang/Object.html?is-external=3Dtrue" title=3D=
"class or interface in java.lang">Object</a></h3>
<code><a href=3D"http://docs.oracle.com/javase/7/docs/api/java/lang/Object.=
html?is-external=3Dtrue#clone()" title=3D"class or interface in java.lang">=
clone</a>, <a href=3D"http://docs.oracle.com/javase/7/docs/api/java/lang/Ob=
ject.html?is-external=3Dtrue#equals(java.lang.Object)" title=3D"class or in=
terface in java.lang">equals</a>, <a href=3D"http://docs.oracle.com/javase/=
7/docs/api/java/lang/Object.html?is-external=3Dtrue#finalize()" title=3D"cl=
ass or interface in java.lang">finalize</a>, <a href=3D"http://docs.oracle.=
com/javase/7/docs/api/java/lang/Object.html?is-external=3Dtrue#getClass()" =
title=3D"class or interface in java.lang">getClass</a>, <a href=3D"http://d=
ocs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-external=3Dtrue#h=
ashCode()" title=3D"class or interface in java.lang">hashCode</a>, <a href=
=3D"http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?is-exter=
nal=3Dtrue#notify()" title=3D"class or interface in java.lang">notify</a>, =
<a href=3D"http://docs.oracle.com/javase/7/docs/api/java/lang/Object.html?i=
s-external=3Dtrue#notifyAll()" title=3D"class or interface in java.lang">no=
tifyAll</a>, <a href=3D"http://docs.oracle.com/javase/7/docs/api/java/lang/=
Object.html?is-external=3Dtrue#toString()" title=3D"class or interface in j=
ava.lang">toString</a>, <a href=3D"http://docs.oracle.com/javase/7/docs/api=
/java/lang/Object.html?is-external=3Dtrue#wait()" title=3D"class or interfa=
ce in java.lang">wait</a>, <a href=3D"http://docs.oracle.com/javase/7/docs/=
api/java/lang/Object.html?is-external=3Dtrue#wait(long)" title=3D"class or =
interface in java.lang">wait</a>, <a href=3D"http://docs.oracle.com/javase/=
7/docs/api/java/lang/Object.html?is-external=3Dtrue#wait(long,%20int)" titl=
e=3D"class or interface in java.lang">wait</a></code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class=3D"details">
<ul class=3D"blockList">
<li class=3D"blockList">
<!-- =3D=3D=3D=3D=3D=3D=3D=3D=3D CONSTRUCTOR DETAIL =3D=3D=3D=3D=3D=3D=3D=
=3D -->
<ul class=3D"blockList">
<li class=3D"blockList"><a name=3D"constructor_detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name=3D"KafkaConsumer(java.util.Map)">
<!--   -->
</a>
<ul class=3D"blockList">
<li class=3D"blockList">
<h4>KafkaConsumer</h4>
<pre>public&nbsp;KafkaConsumer(<a href=3D"http://docs.oracle.com/javase/7/d=
ocs/api/java/util/Map.html?is-external=3Dtrue" title=3D"class or interface =
in java.util">Map</a>&lt;<a href=3D"http://docs.oracle.com/javase/7/docs/ap=
i/java/lang/String.html?is-external=3Dtrue" title=3D"class or interface in =
java.lang">String</a>,<a href=3D"http://docs.oracle.com/javase/7/docs/api/j=
ava/lang/Object.html?is-external=3Dtrue" title=3D"class or interface in jav=
a.lang">Object</a>&gt;&nbsp;configs)</pre>
<div class=3D"block">A consumer is instantiated by providing a set of key-v=
alue pairs as configuration. Valid configuration strings
 are documented <a href=3D"http://kafka.apache.org/documentation.html#consu=
merconfigs">here</a>. Values can be
 either strings or objects of the appropriate type (for example a numeric c=
onfiguration would accept either the
 string "42" or the integer 42).
 <p>
 Valid configuration strings are documented at <a href=3D"http://kafka.apac=
he.org/0100/javadoc/org/apache/kafka/clients/consumer/ConsumerConfig.html" =
title=3D"class in org.apache.kafka.clients.consumer"><code>ConsumerConfig</=
code></a></p></div>
<dl><dt><span class=3D"strong">Parameters:</span></dt><dd><code>configs</co=
de> - The consumer configs</dd></dl>
</li>
</ul>
<a name=3D"KafkaConsumer(java.util.Map, org.apache.kafka.common.serializati=
on.Deserializer, org.apache.kafka.common.serialization.Deserializer)">
<!--   -->
</a>
<ul class=3D"blockList">
<li class=3D"blockList">
<h4>KafkaConsumer</h4>
<pre>public&nbsp;KafkaConsumer(<a href=3D"http://docs.oracle.com/javase/7/d=
ocs/api/java/util/Map.html?is-external=3Dtrue" title=3D"class or interface =
in java.util">Map</a>&lt;<a href=3D"http://docs.oracle.com/javase/7/docs/ap=
i/java/lang/String.html?is-external=3Dtrue" title=3D"class or interface in =
java.lang">String</a>,<a href=3D"http://docs.oracle.com/javase/7/docs/api/j=
ava/lang/Object.html?is-external=3Dtrue" title=3D"class or interface in jav=
a.lang">Object</a>&gt;&nbsp;configs,
             <a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kaf=
ka/common/serialization/Deserializer.html" title=3D"interface in org.apache=
.kafka.common.serialization">Deserializer</a>&lt;<a href=3D"http://kafka.ap=
ache.org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html"=
 title=3D"type parameter in KafkaConsumer">K</a>&gt;&nbsp;keyDeserializer,
             <a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kaf=
ka/common/serialization/Deserializer.html" title=3D"interface in org.apache=
.kafka.common.serialization">Deserializer</a>&lt;<a href=3D"http://kafka.ap=
ache.org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html"=
 title=3D"type parameter in KafkaConsumer">V</a>&gt;&nbsp;valueDeserializer=
)</pre>
<div class=3D"block">A consumer is instantiated by providing a set of key-v=
alue pairs as configuration, and a key and a value <a href=3D"http://kafka.=
apache.org/0100/javadoc/org/apache/kafka/common/serialization/Deserializer.=
html" title=3D"interface in org.apache.kafka.common.serialization"><code>De=
serializer</code></a>.
 <p>
 Valid configuration strings are documented at <a href=3D"http://kafka.apac=
he.org/0100/javadoc/org/apache/kafka/clients/consumer/ConsumerConfig.html" =
title=3D"class in org.apache.kafka.clients.consumer"><code>ConsumerConfig</=
code></a></p></div>
<dl><dt><span class=3D"strong">Parameters:</span></dt><dd><code>configs</co=
de> - The consumer configs</dd><dd><code>keyDeserializer</code> - The deser=
ializer for key that implements <a href=3D"http://kafka.apache.org/0100/jav=
adoc/org/apache/kafka/common/serialization/Deserializer.html" title=3D"inte=
rface in org.apache.kafka.common.serialization"><code>Deserializer</code></=
a>. The configure() method
            won't be called in the consumer when the deserializer is passed=
 in directly.</dd><dd><code>valueDeserializer</code> - The deserializer for=
 value that implements <a href=3D"http://kafka.apache.org/0100/javadoc/org/=
apache/kafka/common/serialization/Deserializer.html" title=3D"interface in =
org.apache.kafka.common.serialization"><code>Deserializer</code></a>. The c=
onfigure() method
            won't be called in the consumer when the deserializer is passed=
 in directly.</dd></dl>
</li>
</ul>
<a name=3D"KafkaConsumer(java.util.Properties)">
<!--   -->
</a>
<ul class=3D"blockList">
<li class=3D"blockList">
<h4>KafkaConsumer</h4>
<pre>public&nbsp;KafkaConsumer(<a href=3D"http://docs.oracle.com/javase/7/d=
ocs/api/java/util/Properties.html?is-external=3Dtrue" title=3D"class or int=
erface in java.util">Properties</a>&nbsp;properties)</pre>
<div class=3D"block">A consumer is instantiated by providing a <a href=3D"h=
ttp://docs.oracle.com/javase/7/docs/api/java/util/Properties.html?is-extern=
al=3Dtrue" title=3D"class or interface in java.util"><code>Properties</code=
></a> object as configuration. Valid
 configuration strings are documented at <a href=3D"http://kafka.apache.org=
/0100/javadoc/org/apache/kafka/clients/consumer/ConsumerConfig.html" title=
=3D"class in org.apache.kafka.clients.consumer"><code>ConsumerConfig</code>=
</a> A consumer is instantiated by providing a
 <a href=3D"http://docs.oracle.com/javase/7/docs/api/java/util/Properties.h=
tml?is-external=3Dtrue" title=3D"class or interface in java.util"><code>Pro=
perties</code></a> object as configuration. Valid configuration strings are=
 documented at
 <a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/clients/c=
onsumer/ConsumerConfig.html" title=3D"class in org.apache.kafka.clients.con=
sumer"><code>ConsumerConfig</code></a></div>
</li>
</ul>
<a name=3D"KafkaConsumer(java.util.Properties, org.apache.kafka.common.seri=
alization.Deserializer, org.apache.kafka.common.serialization.Deserializer)=
">
<!--   -->
</a>
<ul class=3D"blockListLast">
<li class=3D"blockList">
<h4>KafkaConsumer</h4>
<pre>public&nbsp;KafkaConsumer(<a href=3D"http://docs.oracle.com/javase/7/d=
ocs/api/java/util/Properties.html?is-external=3Dtrue" title=3D"class or int=
erface in java.util">Properties</a>&nbsp;properties,
             <a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kaf=
ka/common/serialization/Deserializer.html" title=3D"interface in org.apache=
.kafka.common.serialization">Deserializer</a>&lt;<a href=3D"http://kafka.ap=
ache.org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html"=
 title=3D"type parameter in KafkaConsumer">K</a>&gt;&nbsp;keyDeserializer,
             <a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kaf=
ka/common/serialization/Deserializer.html" title=3D"interface in org.apache=
.kafka.common.serialization">Deserializer</a>&lt;<a href=3D"http://kafka.ap=
ache.org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html"=
 title=3D"type parameter in KafkaConsumer">V</a>&gt;&nbsp;valueDeserializer=
)</pre>
<div class=3D"block">A consumer is instantiated by providing a <a href=3D"h=
ttp://docs.oracle.com/javase/7/docs/api/java/util/Properties.html?is-extern=
al=3Dtrue" title=3D"class or interface in java.util"><code>Properties</code=
></a> object as configuration, and a
 key and a value <a href=3D"http://kafka.apache.org/0100/javadoc/org/apache=
/kafka/common/serialization/Deserializer.html" title=3D"interface in org.ap=
ache.kafka.common.serialization"><code>Deserializer</code></a>.
 <p>
 Valid configuration strings are documented at <a href=3D"http://kafka.apac=
he.org/0100/javadoc/org/apache/kafka/clients/consumer/ConsumerConfig.html" =
title=3D"class in org.apache.kafka.clients.consumer"><code>ConsumerConfig</=
code></a></p></div>
<dl><dt><span class=3D"strong">Parameters:</span></dt><dd><code>properties<=
/code> - The consumer configuration properties</dd><dd><code>keyDeserialize=
r</code> - The deserializer for key that implements <a href=3D"http://kafka=
.apache.org/0100/javadoc/org/apache/kafka/common/serialization/Deserializer=
.html" title=3D"interface in org.apache.kafka.common.serialization"><code>D=
eserializer</code></a>. The configure() method
            won't be called in the consumer when the deserializer is passed=
 in directly.</dd><dd><code>valueDeserializer</code> - The deserializer for=
 value that implements <a href=3D"http://kafka.apache.org/0100/javadoc/org/=
apache/kafka/common/serialization/Deserializer.html" title=3D"interface in =
org.apache.kafka.common.serialization"><code>Deserializer</code></a>. The c=
onfigure() method
            won't be called in the consumer when the deserializer is passed=
 in directly.</dd></dl>
</li>
</ul>
</li>
</ul>
<!-- =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D METHOD DETAIL =3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D -->
<ul class=3D"blockList">
<li class=3D"blockList"><a name=3D"method_detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name=3D"assignment()">
<!--   -->
</a>
<ul class=3D"blockList">
<li class=3D"blockList">
<h4>assignment</h4>
<pre>public&nbsp;<a href=3D"http://docs.oracle.com/javase/7/docs/api/java/u=
til/Set.html?is-external=3Dtrue" title=3D"class or interface in java.util">=
Set</a>&lt;<a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka=
/common/TopicPartition.html" title=3D"class in org.apache.kafka.common">Top=
icPartition</a>&gt;&nbsp;assignment()</pre>
<div class=3D"block">Get the set of partitions currently assigned to this c=
onsumer. If subscription happened by directly assigning
 partitions using <a href=3D"http://kafka.apache.org/0100/javadoc/org/apach=
e/kafka/clients/consumer/KafkaConsumer.html#assign(java.util.Collection)"><=
code>assign(Collection)</code></a> then this will simply return the same pa=
rtitions that
 were assigned. If topic subscription was used, then this will give the set=
 of topic partitions currently assigned
 to the consumer (which may be none if the assignment hasn't happened yet, =
or the partitions are in the
 process of getting reassigned).</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/=
clients/consumer/Consumer.html#assignment()">assignment</a></code>&nbsp;in =
interface&nbsp;<code><a href=3D"http://kafka.apache.org/0100/javadoc/org/ap=
ache/kafka/clients/consumer/Consumer.html" title=3D"interface in org.apache=
.kafka.clients.consumer">Consumer</a>&lt;<a href=3D"http://kafka.apache.org=
/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html" title=
=3D"type parameter in KafkaConsumer">K</a>,<a href=3D"http://kafka.apache.o=
rg/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html" title=
=3D"type parameter in KafkaConsumer">V</a>&gt;</code></dd>
<dt><span class=3D"strong">Returns:</span></dt><dd>The set of partitions cu=
rrently assigned to this consumer</dd><dt><span class=3D"strong">See Also:<=
/span></dt><dd><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/k=
afka/clients/consumer/KafkaConsumer.html#assignment()"><code>assignment()</=
code></a></dd></dl>
</li>
</ul>
<a name=3D"subscription()">
<!--   -->
</a>
<ul class=3D"blockList">
<li class=3D"blockList">
<h4>subscription</h4>
<pre>public&nbsp;<a href=3D"http://docs.oracle.com/javase/7/docs/api/java/u=
til/Set.html?is-external=3Dtrue" title=3D"class or interface in java.util">=
Set</a>&lt;<a href=3D"http://docs.oracle.com/javase/7/docs/api/java/lang/St=
ring.html?is-external=3Dtrue" title=3D"class or interface in java.lang">Str=
ing</a>&gt;&nbsp;subscription()</pre>
<div class=3D"block">Get the current subscription. Will return the same top=
ics used in the most recent call to
 <a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/clients/c=
onsumer/KafkaConsumer.html#subscribe(java.util.Collection,%20org.apache.kaf=
ka.clients.consumer.ConsumerRebalanceListener)"><code>subscribe(Collection,=
 ConsumerRebalanceListener)</code></a>, or an empty set if no such call has=
 been made.</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/=
clients/consumer/Consumer.html#subscription()">subscription</a></code>&nbsp=
;in interface&nbsp;<code><a href=3D"http://kafka.apache.org/0100/javadoc/or=
g/apache/kafka/clients/consumer/Consumer.html" title=3D"interface in org.ap=
ache.kafka.clients.consumer">Consumer</a>&lt;<a href=3D"http://kafka.apache=
.org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html" tit=
le=3D"type parameter in KafkaConsumer">K</a>,<a href=3D"http://kafka.apache=
.org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html" tit=
le=3D"type parameter in KafkaConsumer">V</a>&gt;</code></dd>
<dt><span class=3D"strong">Returns:</span></dt><dd>The set of topics curren=
tly subscribed to</dd><dt><span class=3D"strong">See Also:</span></dt><dd><=
a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/clients/con=
sumer/KafkaConsumer.html#subscription()"><code>subscription()</code></a></d=
d></dl>
</li>
</ul>
<a name=3D"subscribe(java.util.Collection, org.apache.kafka.clients.consume=
r.ConsumerRebalanceListener)">
<!--   -->
</a>
<ul class=3D"blockList">
<li class=3D"blockList">
<h4>subscribe</h4>
<pre>public&nbsp;void&nbsp;subscribe(<a href=3D"http://docs.oracle.com/java=
se/7/docs/api/java/util/Collection.html?is-external=3Dtrue" title=3D"class =
or interface in java.util">Collection</a>&lt;<a href=3D"http://docs.oracle.=
com/javase/7/docs/api/java/lang/String.html?is-external=3Dtrue" title=3D"cl=
ass or interface in java.lang">String</a>&gt;&nbsp;topics,
             <a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kaf=
ka/clients/consumer/ConsumerRebalanceListener.html" title=3D"interface in o=
rg.apache.kafka.clients.consumer">ConsumerRebalanceListener</a>&nbsp;listen=
er)</pre>
<div class=3D"block">Subscribe to the given list of topics to get dynamical=
ly
 assigned partitions. <b>Topic subscriptions are not incremental. This list=
 will replace the current
 assignment (if there is one).</b> Note that it is not possible to combine =
topic subscription with group management
 with manual partition assignment through <a href=3D"http://kafka.apache.or=
g/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#assign(=
java.util.Collection)"><code>assign(Collection)</code></a>.

 If the given list of topics is empty, it is treated the same as <a href=3D=
"http://kafka.apache.org/0100/javadoc/org/apache/kafka/clients/consumer/Kaf=
kaConsumer.html#unsubscribe()"><code>unsubscribe()</code></a>.

 <p>
 As part of group management, the consumer will keep track of the list of c=
onsumers that belong to a particular
 group and will trigger a rebalance operation if one of the following event=
s trigger -
 </p><ul>
 <li>Number of partitions change for any of the subscribed list of topics
 </li><li>Topic is created or deleted
 </li><li>An existing member of the consumer group dies
 </li><li>A new member is added to an existing consumer group via the join =
API
 </li></ul>
 <p>
 When any of these events are triggered, the provided listener will be invo=
ked first to indicate that
 the consumer's assignment has been revoked, and then again when the new as=
signment has been received.
 Note that this listener will immediately override any listener set in a pr=
evious call to subscribe.
 It is guaranteed, however, that the partitions revoked/assigned through th=
is interface are from topics
 subscribed in this call. See <a href=3D"http://kafka.apache.org/0100/javad=
oc/org/apache/kafka/clients/consumer/ConsumerRebalanceListener.html" title=
=3D"interface in org.apache.kafka.clients.consumer"><code>ConsumerRebalance=
Listener</code></a> for more details.</p></div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/=
clients/consumer/Consumer.html#subscribe(java.util.Collection,%20org.apache=
.kafka.clients.consumer.ConsumerRebalanceListener)">subscribe</a></code>&nb=
sp;in interface&nbsp;<code><a href=3D"http://kafka.apache.org/0100/javadoc/=
org/apache/kafka/clients/consumer/Consumer.html" title=3D"interface in org.=
apache.kafka.clients.consumer">Consumer</a>&lt;<a href=3D"http://kafka.apac=
he.org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html" t=
itle=3D"type parameter in KafkaConsumer">K</a>,<a href=3D"http://kafka.apac=
he.org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html" t=
itle=3D"type parameter in KafkaConsumer">V</a>&gt;</code></dd>
<dt><span class=3D"strong">Parameters:</span></dt><dd><code>topics</code> -=
 The list of topics to subscribe to</dd><dd><code>listener</code> - Non-nul=
l listener instance to get notifications on partition assignment/revocation=
 for the
                 subscribed topics</dd><dt><span class=3D"strong">See Also:=
</span></dt><dd><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/=
kafka/clients/consumer/KafkaConsumer.html#subscribe(java.util.Collection,%2=
0org.apache.kafka.clients.consumer.ConsumerRebalanceListener)"><code>subscr=
ibe(Collection, ConsumerRebalanceListener)</code></a></dd></dl>
</li>
</ul>
<a name=3D"subscribe(java.util.Collection)">
<!--   -->
</a>
<ul class=3D"blockList">
<li class=3D"blockList">
<h4>subscribe</h4>
<pre>public&nbsp;void&nbsp;subscribe(<a href=3D"http://docs.oracle.com/java=
se/7/docs/api/java/util/Collection.html?is-external=3Dtrue" title=3D"class =
or interface in java.util">Collection</a>&lt;<a href=3D"http://docs.oracle.=
com/javase/7/docs/api/java/lang/String.html?is-external=3Dtrue" title=3D"cl=
ass or interface in java.lang">String</a>&gt;&nbsp;topics)</pre>
<div class=3D"block">Subscribe to the given list of topics to get dynamical=
ly assigned partitions.
 <b>Topic subscriptions are not incremental. This list will replace the cur=
rent
 assignment (if there is one).</b> It is not possible to combine topic subs=
cription with group management
 with manual partition assignment through <a href=3D"http://kafka.apache.or=
g/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#assign(=
java.util.Collection)"><code>assign(Collection)</code></a>.

 If the given list of topics is empty, it is treated the same as <a href=3D=
"http://kafka.apache.org/0100/javadoc/org/apache/kafka/clients/consumer/Kaf=
kaConsumer.html#unsubscribe()"><code>unsubscribe()</code></a>.

 <p>
 This is a short-hand for <a href=3D"http://kafka.apache.org/0100/javadoc/o=
rg/apache/kafka/clients/consumer/KafkaConsumer.html#subscribe(java.util.Col=
lection,%20org.apache.kafka.clients.consumer.ConsumerRebalanceListener)"><c=
ode>subscribe(Collection, ConsumerRebalanceListener)</code></a>, which
 uses a noop listener. If you need the ability to either seek to particular=
 offsets, you should prefer
 <a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/clients/c=
onsumer/KafkaConsumer.html#subscribe(java.util.Collection,%20org.apache.kaf=
ka.clients.consumer.ConsumerRebalanceListener)"><code>subscribe(Collection,=
 ConsumerRebalanceListener)</code></a>, since group rebalances will cause p=
artition offsets
 to be reset. You should also prefer to provide your own listener if you ar=
e doing your own offset
 management since the listener gives you an opportunity to commit offsets b=
efore a rebalance finishes.</p></div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/=
clients/consumer/Consumer.html#subscribe(java.util.Collection)">subscribe</=
a></code>&nbsp;in interface&nbsp;<code><a href=3D"http://kafka.apache.org/0=
100/javadoc/org/apache/kafka/clients/consumer/Consumer.html" title=3D"inter=
face in org.apache.kafka.clients.consumer">Consumer</a>&lt;<a href=3D"http:=
//kafka.apache.org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaCons=
umer.html" title=3D"type parameter in KafkaConsumer">K</a>,<a href=3D"http:=
//kafka.apache.org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaCons=
umer.html" title=3D"type parameter in KafkaConsumer">V</a>&gt;</code></dd>
<dt><span class=3D"strong">Parameters:</span></dt><dd><code>topics</code> -=
 The list of topics to subscribe to</dd><dt><span class=3D"strong">See Also=
:</span></dt><dd><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache=
/kafka/clients/consumer/KafkaConsumer.html#subscribe(java.util.Collection)"=
><code>subscribe(Collection)</code></a></dd></dl>
</li>
</ul>
<a name=3D"subscribe(java.util.regex.Pattern, org.apache.kafka.clients.cons=
umer.ConsumerRebalanceListener)">
<!--   -->
</a>
<ul class=3D"blockList">
<li class=3D"blockList">
<h4>subscribe</h4>
<pre>public&nbsp;void&nbsp;subscribe(<a href=3D"http://docs.oracle.com/java=
se/7/docs/api/java/util/regex/Pattern.html?is-external=3Dtrue" title=3D"cla=
ss or interface in java.util.regex">Pattern</a>&nbsp;pattern,
             <a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kaf=
ka/clients/consumer/ConsumerRebalanceListener.html" title=3D"interface in o=
rg.apache.kafka.clients.consumer">ConsumerRebalanceListener</a>&nbsp;listen=
er)</pre>
<div class=3D"block">Subscribe to all topics matching specified pattern to =
get dynamically assigned partitions. The pattern matching will be done peri=
odically against topics
 existing at the time of check.
 <p>
 As part of group management, the consumer will keep track of the list of c=
onsumers that
 belong to a particular group and will trigger a rebalance operation if one=
 of the
 following events trigger -
 </p><ul>
 <li>Number of partitions change for any of the subscribed list of topics
 </li><li>Topic is created or deleted
 </li><li>An existing member of the consumer group dies
 </li><li>A new member is added to an existing consumer group via the join =
API
 </li></ul></div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/=
clients/consumer/Consumer.html#subscribe(java.util.regex.Pattern,%20org.apa=
che.kafka.clients.consumer.ConsumerRebalanceListener)">subscribe</a></code>=
&nbsp;in interface&nbsp;<code><a href=3D"http://kafka.apache.org/0100/javad=
oc/org/apache/kafka/clients/consumer/Consumer.html" title=3D"interface in o=
rg.apache.kafka.clients.consumer">Consumer</a>&lt;<a href=3D"http://kafka.a=
pache.org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html=
" title=3D"type parameter in KafkaConsumer">K</a>,<a href=3D"http://kafka.a=
pache.org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html=
" title=3D"type parameter in KafkaConsumer">V</a>&gt;</code></dd>
<dt><span class=3D"strong">Parameters:</span></dt><dd><code>pattern</code> =
- Pattern to subscribe to</dd><dt><span class=3D"strong">See Also:</span></=
dt><dd><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/cli=
ents/consumer/KafkaConsumer.html#subscribe(java.util.regex.Pattern,%20org.a=
pache.kafka.clients.consumer.ConsumerRebalanceListener)"><code>subscribe(Pa=
ttern, ConsumerRebalanceListener)</code></a></dd></dl>
</li>
</ul>
<a name=3D"unsubscribe()">
<!--   -->
</a>
<ul class=3D"blockList">
<li class=3D"blockList">
<h4>unsubscribe</h4>
<pre>public&nbsp;void&nbsp;unsubscribe()</pre>
<div class=3D"block">Unsubscribe from topics currently subscribed with <a h=
ref=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/clients/consum=
er/KafkaConsumer.html#subscribe(java.util.Collection)"><code>subscribe(Coll=
ection)</code></a>. This
 also clears any partitions directly assigned through <a href=3D"http://kaf=
ka.apache.org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.=
html#assign(java.util.Collection)"><code>assign(Collection)</code></a>.</di=
v>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/=
clients/consumer/Consumer.html#unsubscribe()">unsubscribe</a></code>&nbsp;i=
n interface&nbsp;<code><a href=3D"http://kafka.apache.org/0100/javadoc/org/=
apache/kafka/clients/consumer/Consumer.html" title=3D"interface in org.apac=
he.kafka.clients.consumer">Consumer</a>&lt;<a href=3D"http://kafka.apache.o=
rg/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html" title=
=3D"type parameter in KafkaConsumer">K</a>,<a href=3D"http://kafka.apache.o=
rg/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html" title=
=3D"type parameter in KafkaConsumer">V</a>&gt;</code></dd>
<dt><span class=3D"strong">See Also:</span></dt><dd><a href=3D"http://kafka=
.apache.org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.ht=
ml#unsubscribe()"><code>unsubscribe()</code></a></dd></dl>
</li>
</ul>
<a name=3D"assign(java.util.Collection)">
<!--   -->
</a>
<ul class=3D"blockList">
<li class=3D"blockList">
<h4>assign</h4>
<pre>public&nbsp;void&nbsp;assign(<a href=3D"http://docs.oracle.com/javase/=
7/docs/api/java/util/Collection.html?is-external=3Dtrue" title=3D"class or =
interface in java.util">Collection</a>&lt;<a href=3D"http://kafka.apache.or=
g/0100/javadoc/org/apache/kafka/common/TopicPartition.html" title=3D"class =
in org.apache.kafka.common">TopicPartition</a>&gt;&nbsp;partitions)</pre>
<div class=3D"block">Manually assign a list of partition to this consumer. =
This interface does not allow for incremental assignment
 and will replace the previous assignment (if there is one).
 <p>
 Manual topic assignment through this method does not use the consumer's gr=
oup management
 functionality. As such, there will be no rebalance operation triggered whe=
n group membership or cluster and topic
 metadata change. Note that it is not possible to use both manual partition=
 assignment with <a href=3D"http://kafka.apache.org/0100/javadoc/org/apache=
/kafka/clients/consumer/KafkaConsumer.html#assign(java.util.Collection)"><c=
ode>assign(Collection)</code></a>
 and group assignment with <a href=3D"http://kafka.apache.org/0100/javadoc/=
org/apache/kafka/clients/consumer/KafkaConsumer.html#subscribe(java.util.Co=
llection,%20org.apache.kafka.clients.consumer.ConsumerRebalanceListener)"><=
code>subscribe(Collection, ConsumerRebalanceListener)</code></a>.</p></div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/=
clients/consumer/Consumer.html#assign(java.util.Collection)">assign</a></co=
de>&nbsp;in interface&nbsp;<code><a href=3D"http://kafka.apache.org/0100/ja=
vadoc/org/apache/kafka/clients/consumer/Consumer.html" title=3D"interface i=
n org.apache.kafka.clients.consumer">Consumer</a>&lt;<a href=3D"http://kafk=
a.apache.org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.h=
tml" title=3D"type parameter in KafkaConsumer">K</a>,<a href=3D"http://kafk=
a.apache.org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.h=
tml" title=3D"type parameter in KafkaConsumer">V</a>&gt;</code></dd>
<dt><span class=3D"strong">Parameters:</span></dt><dd><code>partitions</cod=
e> - The list of partitions to assign this consumer</dd><dt><span class=3D"=
strong">See Also:</span></dt><dd><a href=3D"http://kafka.apache.org/0100/ja=
vadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#assign(java.util=
.Collection)"><code>assign(Collection)</code></a></dd></dl>
</li>
</ul>
<a name=3D"poll(long)">
<!--   -->
</a>
<ul class=3D"blockList">
<li class=3D"blockList">
<h4>poll</h4>
<pre>public&nbsp;<a href=3D"http://kafka.apache.org/0100/javadoc/org/apache=
/kafka/clients/consumer/ConsumerRecords.html" title=3D"class in org.apache.=
kafka.clients.consumer">ConsumerRecords</a>&lt;<a href=3D"http://kafka.apac=
he.org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html" t=
itle=3D"type parameter in KafkaConsumer">K</a>,<a href=3D"http://kafka.apac=
he.org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html" t=
itle=3D"type parameter in KafkaConsumer">V</a>&gt;&nbsp;poll(long&nbsp;time=
out)</pre>
<div class=3D"block">Fetch data for the topics or partitions specified usin=
g one of the subscribe/assign APIs. It is an error to not have
 subscribed to any topics or partitions before polling for data.
 <p>
 On each poll, consumer will try to use the last consumed offset as the sta=
rting offset and fetch sequentially. The last
 consumed offset can be manually set through <a href=3D"http://kafka.apache=
.org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#seek=
(org.apache.kafka.common.TopicPartition,%20long)"><code>seek(TopicPartition=
, long)</code></a> or automatically set as the last committed
 offset for the subscribed list of partitions</p></div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/=
clients/consumer/Consumer.html#poll(long)">poll</a></code>&nbsp;in interfac=
e&nbsp;<code><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kaf=
ka/clients/consumer/Consumer.html" title=3D"interface in org.apache.kafka.c=
lients.consumer">Consumer</a>&lt;<a href=3D"http://kafka.apache.org/0100/ja=
vadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html" title=3D"type p=
arameter in KafkaConsumer">K</a>,<a href=3D"http://kafka.apache.org/0100/ja=
vadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html" title=3D"type p=
arameter in KafkaConsumer">V</a>&gt;</code></dd>
<dt><span class=3D"strong">Parameters:</span></dt><dd><code>timeout</code> =
- The time, in milliseconds, spent waiting in poll if data is not available=
 in the buffer.
            If 0, returns immediately with any records that are available c=
urrently in the buffer, else returns empty.
            Must not be negative.</dd>
<dt><span class=3D"strong">Returns:</span></dt><dd>map of topic to records =
since the last fetch for the subscribed list of topics and partitions</dd>
<dt><span class=3D"strong">Throws:</span></dt>
<dd><code><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/=
clients/consumer/InvalidOffsetException.html" title=3D"class in org.apache.=
kafka.clients.consumer">InvalidOffsetException</a></code> - if the offset f=
or a partition or set of
             partitions is undefined or out of range and no offset reset po=
licy has been configured</dd>
<dd><code><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/=
common/errors/WakeupException.html" title=3D"class in org.apache.kafka.comm=
on.errors">WakeupException</a></code> - if <a href=3D"http://kafka.apache.o=
rg/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#wakeup=
()"><code>wakeup()</code></a> is called before or while this
             function is called</dd>
<dd><code><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/=
common/errors/AuthorizationException.html" title=3D"class in org.apache.kaf=
ka.common.errors">AuthorizationException</a></code> - if caller does Read a=
ccess to any of the subscribed
             topics or to the configured groupId</dd>
<dd><code><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/=
common/KafkaException.html" title=3D"class in org.apache.kafka.common">Kafk=
aException</a></code> - for any other unrecoverable errors (e.g. invalid gr=
oupId or
             session timeout, errors deserializing key/value pairs, or any =
new error cases in future versions)</dd><dt><span class=3D"strong">See Also=
:</span></dt><dd><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache=
/kafka/clients/consumer/KafkaConsumer.html#poll(long)"><code>poll(long)</co=
de></a></dd></dl>
</li>
</ul>
<a name=3D"commitSync()">
<!--   -->
</a>
<ul class=3D"blockList">
<li class=3D"blockList">
<h4>commitSync</h4>
<pre>public&nbsp;void&nbsp;commitSync()</pre>
<div class=3D"block">Commit offsets returned on the last <a href=3D"http://=
kafka.apache.org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsum=
er.html#poll(long)"><code>poll()</code></a> for all the subscribed list of =
topics and partitions.
 <p>
 This commits offsets only to Kafka. The offsets committed using this API w=
ill be used on the first fetch after
 every rebalance and also on startup. As such, if you need to store offsets=
 in anything other than Kafka, this API
 should not be used.
 </p><p>
 This is a synchronous commits and will block until either the commit succe=
eds or an unrecoverable error is
 encountered (in which case it is thrown to the caller).</p></div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/=
clients/consumer/Consumer.html#commitSync()">commitSync</a></code>&nbsp;in =
interface&nbsp;<code><a href=3D"http://kafka.apache.org/0100/javadoc/org/ap=
ache/kafka/clients/consumer/Consumer.html" title=3D"interface in org.apache=
.kafka.clients.consumer">Consumer</a>&lt;<a href=3D"http://kafka.apache.org=
/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html" title=
=3D"type parameter in KafkaConsumer">K</a>,<a href=3D"http://kafka.apache.o=
rg/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html" title=
=3D"type parameter in KafkaConsumer">V</a>&gt;</code></dd>
<dt><span class=3D"strong">Throws:</span></dt>
<dd><code><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/=
clients/consumer/CommitFailedException.html" title=3D"class in org.apache.k=
afka.clients.consumer">CommitFailedException</a></code> - if the commit fai=
led and cannot be retried.
             This can only occur if you are using automatic group managemen=
t with <a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/cli=
ents/consumer/KafkaConsumer.html#subscribe(java.util.Collection)"><code>sub=
scribe(Collection)</code></a>,
             or if there is an active group with the same groupId which is =
using group management.</dd>
<dd><code><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/=
common/errors/WakeupException.html" title=3D"class in org.apache.kafka.comm=
on.errors">WakeupException</a></code> - if <a href=3D"http://kafka.apache.o=
rg/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#wakeup=
()"><code>wakeup()</code></a> is called before or while this
             function is called</dd>
<dd><code><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/=
common/errors/AuthorizationException.html" title=3D"class in org.apache.kaf=
ka.common.errors">AuthorizationException</a></code> - if not authorized to =
the topic or to the
             configured groupId</dd>
<dd><code><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/=
common/KafkaException.html" title=3D"class in org.apache.kafka.common">Kafk=
aException</a></code> - for any other unrecoverable errors (e.g. if offset =
metadata
             is too large or if the committed offset is invalid).</dd><dt><=
span class=3D"strong">See Also:</span></dt><dd><a href=3D"http://kafka.apac=
he.org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#co=
mmitSync()"><code>commitSync()</code></a></dd></dl>
</li>
</ul>
<a name=3D"commitSync(java.util.Map)">
<!--   -->
</a>
<ul class=3D"blockList">
<li class=3D"blockList">
<h4>commitSync</h4>
<pre>public&nbsp;void&nbsp;commitSync(<a href=3D"http://docs.oracle.com/jav=
ase/7/docs/api/java/util/Map.html?is-external=3Dtrue" title=3D"class or int=
erface in java.util">Map</a>&lt;<a href=3D"http://kafka.apache.org/0100/jav=
adoc/org/apache/kafka/common/TopicPartition.html" title=3D"class in org.apa=
che.kafka.common">TopicPartition</a>,<a href=3D"http://kafka.apache.org/010=
0/javadoc/org/apache/kafka/clients/consumer/OffsetAndMetadata.html" title=
=3D"class in org.apache.kafka.clients.consumer">OffsetAndMetadata</a>&gt;&n=
bsp;offsets)</pre>
<div class=3D"block">Commit the specified offsets for the specified list of=
 topics and partitions.
 <p>
 This commits offsets to Kafka. The offsets committed using this API will b=
e used on the first fetch after every
 rebalance and also on startup. As such, if you need to store offsets in an=
ything other than Kafka, this API
 should not be used. The committed offset should be the next message your a=
pplication will consume,
 i.e. lastProcessedMessageOffset + 1.
 </p><p>
 This is a synchronous commits and will block until either the commit succe=
eds or an unrecoverable error is
 encountered (in which case it is thrown to the caller).</p></div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/=
clients/consumer/Consumer.html#commitSync(java.util.Map)">commitSync</a></c=
ode>&nbsp;in interface&nbsp;<code><a href=3D"http://kafka.apache.org/0100/j=
avadoc/org/apache/kafka/clients/consumer/Consumer.html" title=3D"interface =
in org.apache.kafka.clients.consumer">Consumer</a>&lt;<a href=3D"http://kaf=
ka.apache.org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.=
html" title=3D"type parameter in KafkaConsumer">K</a>,<a href=3D"http://kaf=
ka.apache.org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.=
html" title=3D"type parameter in KafkaConsumer">V</a>&gt;</code></dd>
<dt><span class=3D"strong">Parameters:</span></dt><dd><code>offsets</code> =
- A map of offsets by partition with associated metadata</dd>
<dt><span class=3D"strong">Throws:</span></dt>
<dd><code><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/=
clients/consumer/CommitFailedException.html" title=3D"class in org.apache.k=
afka.clients.consumer">CommitFailedException</a></code> - if the commit fai=
led and cannot be retried.
             This can only occur if you are using automatic group managemen=
t with <a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/cli=
ents/consumer/KafkaConsumer.html#subscribe(java.util.Collection)"><code>sub=
scribe(Collection)</code></a>,
             or if there is an active group with the same groupId which is =
using group management.</dd>
<dd><code><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/=
common/errors/WakeupException.html" title=3D"class in org.apache.kafka.comm=
on.errors">WakeupException</a></code> - if <a href=3D"http://kafka.apache.o=
rg/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#wakeup=
()"><code>wakeup()</code></a> is called before or while this
             function is called</dd>
<dd><code><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/=
common/errors/AuthorizationException.html" title=3D"class in org.apache.kaf=
ka.common.errors">AuthorizationException</a></code> - if not authorized to =
the topic or to the
             configured groupId</dd>
<dd><code><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/=
common/KafkaException.html" title=3D"class in org.apache.kafka.common">Kafk=
aException</a></code> - for any other unrecoverable errors (e.g. if offset =
metadata
             is too large or if the committed offset is invalid).</dd><dt><=
span class=3D"strong">See Also:</span></dt><dd><a href=3D"http://kafka.apac=
he.org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#co=
mmitSync(java.util.Map)"><code>commitSync(Map)</code></a></dd></dl>
</li>
</ul>
<a name=3D"commitAsync()">
<!--   -->
</a>
<ul class=3D"blockList">
<li class=3D"blockList">
<h4>commitAsync</h4>
<pre>public&nbsp;void&nbsp;commitAsync()</pre>
<div class=3D"block">Commit offsets returned on the last <a href=3D"http://=
kafka.apache.org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsum=
er.html#poll(long)"><code>poll()</code></a> for all the subscribed list of =
topics and partition.
 Same as <a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/c=
lients/consumer/KafkaConsumer.html#commitAsync(org.apache.kafka.clients.con=
sumer.OffsetCommitCallback)"><code>commitAsync(null)</code></a></div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/=
clients/consumer/Consumer.html#commitAsync()">commitAsync</a></code>&nbsp;i=
n interface&nbsp;<code><a href=3D"http://kafka.apache.org/0100/javadoc/org/=
apache/kafka/clients/consumer/Consumer.html" title=3D"interface in org.apac=
he.kafka.clients.consumer">Consumer</a>&lt;<a href=3D"http://kafka.apache.o=
rg/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html" title=
=3D"type parameter in KafkaConsumer">K</a>,<a href=3D"http://kafka.apache.o=
rg/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html" title=
=3D"type parameter in KafkaConsumer">V</a>&gt;</code></dd>
<dt><span class=3D"strong">See Also:</span></dt><dd><a href=3D"http://kafka=
.apache.org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.ht=
ml#commitAsync()"><code>commitAsync()</code></a></dd></dl>
</li>
</ul>
<a name=3D"commitAsync(org.apache.kafka.clients.consumer.OffsetCommitCallba=
ck)">
<!--   -->
</a>
<ul class=3D"blockList">
<li class=3D"blockList">
<h4>commitAsync</h4>
<pre>public&nbsp;void&nbsp;commitAsync(<a href=3D"http://kafka.apache.org/0=
100/javadoc/org/apache/kafka/clients/consumer/OffsetCommitCallback.html" ti=
tle=3D"interface in org.apache.kafka.clients.consumer">OffsetCommitCallback=
</a>&nbsp;callback)</pre>
<div class=3D"block">Commit offsets returned on the last <a href=3D"http://=
kafka.apache.org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsum=
er.html#poll(long)"><code>poll()</code></a> for the subscribed list of topi=
cs and partitions.
 <p>
 This commits offsets only to Kafka. The offsets committed using this API w=
ill be used on the first fetch after
 every rebalance and also on startup. As such, if you need to store offsets=
 in anything other than Kafka, this API
 should not be used.
 </p><p>
 This is an asynchronous call and will not block. Any errors encountered ar=
e either passed to the callback
 (if provided) or discarded.</p></div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/=
clients/consumer/Consumer.html#commitAsync(org.apache.kafka.clients.consume=
r.OffsetCommitCallback)">commitAsync</a></code>&nbsp;in interface&nbsp;<cod=
e><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/clients/=
consumer/Consumer.html" title=3D"interface in org.apache.kafka.clients.cons=
umer">Consumer</a>&lt;<a href=3D"http://kafka.apache.org/0100/javadoc/org/a=
pache/kafka/clients/consumer/KafkaConsumer.html" title=3D"type parameter in=
 KafkaConsumer">K</a>,<a href=3D"http://kafka.apache.org/0100/javadoc/org/a=
pache/kafka/clients/consumer/KafkaConsumer.html" title=3D"type parameter in=
 KafkaConsumer">V</a>&gt;</code></dd>
<dt><span class=3D"strong">Parameters:</span></dt><dd><code>callback</code>=
 - Callback to invoke when the commit completes</dd><dt><span class=3D"stro=
ng">See Also:</span></dt><dd><a href=3D"http://kafka.apache.org/0100/javado=
c/org/apache/kafka/clients/consumer/KafkaConsumer.html#commitAsync(org.apac=
he.kafka.clients.consumer.OffsetCommitCallback)"><code>commitAsync(OffsetCo=
mmitCallback)</code></a></dd></dl>
</li>
</ul>
<a name=3D"commitAsync(java.util.Map, org.apache.kafka.clients.consumer.Off=
setCommitCallback)">
<!--   -->
</a>
<ul class=3D"blockList">
<li class=3D"blockList">
<h4>commitAsync</h4>
<pre>public&nbsp;void&nbsp;commitAsync(<a href=3D"http://docs.oracle.com/ja=
vase/7/docs/api/java/util/Map.html?is-external=3Dtrue" title=3D"class or in=
terface in java.util">Map</a>&lt;<a href=3D"http://kafka.apache.org/0100/ja=
vadoc/org/apache/kafka/common/TopicPartition.html" title=3D"class in org.ap=
ache.kafka.common">TopicPartition</a>,<a href=3D"http://kafka.apache.org/01=
00/javadoc/org/apache/kafka/clients/consumer/OffsetAndMetadata.html" title=
=3D"class in org.apache.kafka.clients.consumer">OffsetAndMetadata</a>&gt;&n=
bsp;offsets,
               <a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/k=
afka/clients/consumer/OffsetCommitCallback.html" title=3D"interface in org.=
apache.kafka.clients.consumer">OffsetCommitCallback</a>&nbsp;callback)</pre=
>
<div class=3D"block">Commit the specified offsets for the specified list of=
 topics and partitions to Kafka.
 <p>
 This commits offsets to Kafka. The offsets committed using this API will b=
e used on the first fetch after every
 rebalance and also on startup. As such, if you need to store offsets in an=
ything other than Kafka, this API
 should not be used. The committed offset should be the next message your a=
pplication will consume,
 i.e. lastProcessedMessageOffset + 1.
 </p><p>
 This is an asynchronous call and will not block. Any errors encountered ar=
e either passed to the callback
 (if provided) or discarded.</p></div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/=
clients/consumer/Consumer.html#commitAsync(java.util.Map,%20org.apache.kafk=
a.clients.consumer.OffsetCommitCallback)">commitAsync</a></code>&nbsp;in in=
terface&nbsp;<code><a href=3D"http://kafka.apache.org/0100/javadoc/org/apac=
he/kafka/clients/consumer/Consumer.html" title=3D"interface in org.apache.k=
afka.clients.consumer">Consumer</a>&lt;<a href=3D"http://kafka.apache.org/0=
100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html" title=3D"=
type parameter in KafkaConsumer">K</a>,<a href=3D"http://kafka.apache.org/0=
100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html" title=3D"=
type parameter in KafkaConsumer">V</a>&gt;</code></dd>
<dt><span class=3D"strong">Parameters:</span></dt><dd><code>offsets</code> =
- A map of offsets by partition with associate metadata. This map will be c=
opied internally, so it
                is safe to mutate the map after returning.</dd><dd><code>ca=
llback</code> - Callback to invoke when the commit completes</dd><dt><span =
class=3D"strong">See Also:</span></dt><dd><a href=3D"http://kafka.apache.or=
g/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#commitA=
sync(java.util.Map,%20org.apache.kafka.clients.consumer.OffsetCommitCallbac=
k)"><code>commitAsync(Map, OffsetCommitCallback)</code></a></dd></dl>
</li>
</ul>
<a name=3D"seek(org.apache.kafka.common.TopicPartition, long)">
<!--   -->
</a>
<ul class=3D"blockList">
<li class=3D"blockList">
<h4>seek</h4>
<pre>public&nbsp;void&nbsp;seek(<a href=3D"http://kafka.apache.org/0100/jav=
adoc/org/apache/kafka/common/TopicPartition.html" title=3D"class in org.apa=
che.kafka.common">TopicPartition</a>&nbsp;partition,
        long&nbsp;offset)</pre>
<div class=3D"block">Overrides the fetch offsets that the consumer will use=
 on the next <a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kaf=
ka/clients/consumer/KafkaConsumer.html#poll(long)"><code>poll(timeout)</cod=
e></a>. If this API
 is invoked for the same partition more than once, the latest offset will b=
e used on the next poll(). Note that
 you may lose data if this API is arbitrarily used in the middle of consump=
tion, to reset the fetch offsets</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/=
clients/consumer/Consumer.html#seek(org.apache.kafka.common.TopicPartition,=
%20long)">seek</a></code>&nbsp;in interface&nbsp;<code><a href=3D"http://ka=
fka.apache.org/0100/javadoc/org/apache/kafka/clients/consumer/Consumer.html=
" title=3D"interface in org.apache.kafka.clients.consumer">Consumer</a>&lt;=
<a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/clients/co=
nsumer/KafkaConsumer.html" title=3D"type parameter in KafkaConsumer">K</a>,=
<a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/clients/co=
nsumer/KafkaConsumer.html" title=3D"type parameter in KafkaConsumer">V</a>&=
gt;</code></dd>
<dt><span class=3D"strong">See Also:</span></dt><dd><a href=3D"http://kafka=
.apache.org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.ht=
ml#seek(org.apache.kafka.common.TopicPartition,%20long)"><code>seek(TopicPa=
rtition, long)</code></a></dd></dl>
</li>
</ul>
<a name=3D"seekToBeginning(java.util.Collection)">
<!--   -->
</a>
<ul class=3D"blockList">
<li class=3D"blockList">
<h4>seekToBeginning</h4>
<pre>public&nbsp;void&nbsp;seekToBeginning(<a href=3D"http://docs.oracle.co=
m/javase/7/docs/api/java/util/Collection.html?is-external=3Dtrue" title=3D"=
class or interface in java.util">Collection</a>&lt;<a href=3D"http://kafka.=
apache.org/0100/javadoc/org/apache/kafka/common/TopicPartition.html" title=
=3D"class in org.apache.kafka.common">TopicPartition</a>&gt;&nbsp;partition=
s)</pre>
<div class=3D"block">Seek to the first offset for each of the given partiti=
ons. This function evaluates lazily, seeking to the
 first offset in all partitions only when <a href=3D"http://kafka.apache.or=
g/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#poll(lo=
ng)"><code>poll(long)</code></a> or <a href=3D"http://kafka.apache.org/0100=
/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#position(org.=
apache.kafka.common.TopicPartition)"><code>position(TopicPartition)</code><=
/a> are called.
 If no partition is provided, seek to the first offset for all of the curre=
ntly assigned partitions.</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/=
clients/consumer/Consumer.html#seekToBeginning(java.util.Collection)">seekT=
oBeginning</a></code>&nbsp;in interface&nbsp;<code><a href=3D"http://kafka.=
apache.org/0100/javadoc/org/apache/kafka/clients/consumer/Consumer.html" ti=
tle=3D"interface in org.apache.kafka.clients.consumer">Consumer</a>&lt;<a h=
ref=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/clients/consum=
er/KafkaConsumer.html" title=3D"type parameter in KafkaConsumer">K</a>,<a h=
ref=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/clients/consum=
er/KafkaConsumer.html" title=3D"type parameter in KafkaConsumer">V</a>&gt;<=
/code></dd>
<dt><span class=3D"strong">See Also:</span></dt><dd><a href=3D"http://kafka=
.apache.org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.ht=
ml#seekToBeginning(java.util.Collection)"><code>seekToBeginning(Collection)=
</code></a></dd></dl>
</li>
</ul>
<a name=3D"seekToEnd(java.util.Collection)">
<!--   -->
</a>
<ul class=3D"blockList">
<li class=3D"blockList">
<h4>seekToEnd</h4>
<pre>public&nbsp;void&nbsp;seekToEnd(<a href=3D"http://docs.oracle.com/java=
se/7/docs/api/java/util/Collection.html?is-external=3Dtrue" title=3D"class =
or interface in java.util">Collection</a>&lt;<a href=3D"http://kafka.apache=
.org/0100/javadoc/org/apache/kafka/common/TopicPartition.html" title=3D"cla=
ss in org.apache.kafka.common">TopicPartition</a>&gt;&nbsp;partitions)</pre=
>
<div class=3D"block">Seek to the last offset for each of the given partitio=
ns. This function evaluates lazily, seeking to the
 final offset in all partitions only when <a href=3D"http://kafka.apache.or=
g/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#poll(lo=
ng)"><code>poll(long)</code></a> or <a href=3D"http://kafka.apache.org/0100=
/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#position(org.=
apache.kafka.common.TopicPartition)"><code>position(TopicPartition)</code><=
/a> are called.
 If no partition is provided, seek to the final offset for all of the curre=
ntly assigned partitions.</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/=
clients/consumer/Consumer.html#seekToEnd(java.util.Collection)">seekToEnd</=
a></code>&nbsp;in interface&nbsp;<code><a href=3D"http://kafka.apache.org/0=
100/javadoc/org/apache/kafka/clients/consumer/Consumer.html" title=3D"inter=
face in org.apache.kafka.clients.consumer">Consumer</a>&lt;<a href=3D"http:=
//kafka.apache.org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaCons=
umer.html" title=3D"type parameter in KafkaConsumer">K</a>,<a href=3D"http:=
//kafka.apache.org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaCons=
umer.html" title=3D"type parameter in KafkaConsumer">V</a>&gt;</code></dd>
<dt><span class=3D"strong">See Also:</span></dt><dd><a href=3D"http://kafka=
.apache.org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.ht=
ml#seekToEnd(java.util.Collection)"><code>seekToEnd(Collection)</code></a><=
/dd></dl>
</li>
</ul>
<a name=3D"position(org.apache.kafka.common.TopicPartition)">
<!--   -->
</a>
<ul class=3D"blockList">
<li class=3D"blockList">
<h4>position</h4>
<pre>public&nbsp;long&nbsp;position(<a href=3D"http://kafka.apache.org/0100=
/javadoc/org/apache/kafka/common/TopicPartition.html" title=3D"class in org=
.apache.kafka.common">TopicPartition</a>&nbsp;partition)</pre>
<div class=3D"block">Get the offset of the <i>next record</i> that will be =
fetched (if a record with that offset exists).</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/=
clients/consumer/Consumer.html#position(org.apache.kafka.common.TopicPartit=
ion)">position</a></code>&nbsp;in interface&nbsp;<code><a href=3D"http://ka=
fka.apache.org/0100/javadoc/org/apache/kafka/clients/consumer/Consumer.html=
" title=3D"interface in org.apache.kafka.clients.consumer">Consumer</a>&lt;=
<a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/clients/co=
nsumer/KafkaConsumer.html" title=3D"type parameter in KafkaConsumer">K</a>,=
<a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/clients/co=
nsumer/KafkaConsumer.html" title=3D"type parameter in KafkaConsumer">V</a>&=
gt;</code></dd>
<dt><span class=3D"strong">Parameters:</span></dt><dd><code>partition</code=
> - The partition to get the position for</dd>
<dt><span class=3D"strong">Returns:</span></dt><dd>The offset</dd>
<dt><span class=3D"strong">Throws:</span></dt>
<dd><code><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/=
clients/consumer/InvalidOffsetException.html" title=3D"class in org.apache.=
kafka.clients.consumer">InvalidOffsetException</a></code> - if no offset is=
 currently defined for
             the partition</dd>
<dd><code><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/=
common/errors/WakeupException.html" title=3D"class in org.apache.kafka.comm=
on.errors">WakeupException</a></code> - if <a href=3D"http://kafka.apache.o=
rg/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#wakeup=
()"><code>wakeup()</code></a> is called before or while this
             function is called</dd>
<dd><code><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/=
common/errors/AuthorizationException.html" title=3D"class in org.apache.kaf=
ka.common.errors">AuthorizationException</a></code> - if not authorized to =
the topic or to the
             configured groupId</dd>
<dd><code><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/=
common/KafkaException.html" title=3D"class in org.apache.kafka.common">Kafk=
aException</a></code> - for any other unrecoverable errors</dd><dt><span cl=
ass=3D"strong">See Also:</span></dt><dd><a href=3D"http://kafka.apache.org/=
0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#position(=
org.apache.kafka.common.TopicPartition)"><code>position(TopicPartition)</co=
de></a></dd></dl>
</li>
</ul>
<a name=3D"committed(org.apache.kafka.common.TopicPartition)">
<!--   -->
</a>
<ul class=3D"blockList">
<li class=3D"blockList">
<h4>committed</h4>
<pre>public&nbsp;<a href=3D"http://kafka.apache.org/0100/javadoc/org/apache=
/kafka/clients/consumer/OffsetAndMetadata.html" title=3D"class in org.apach=
e.kafka.clients.consumer">OffsetAndMetadata</a>&nbsp;committed(<a href=3D"h=
ttp://kafka.apache.org/0100/javadoc/org/apache/kafka/common/TopicPartition.=
html" title=3D"class in org.apache.kafka.common">TopicPartition</a>&nbsp;pa=
rtition)</pre>
<div class=3D"block">Get the last committed offset for the given partition =
(whether the commit happened by this process or
 another). This offset will be used as the position for the consumer in the=
 event of a failure.
 <p>
 This call may block to do a remote call if the partition in question isn't=
 assigned to this consumer or if the
 consumer hasn't yet initialized its cache of committed offsets.</p></div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/=
clients/consumer/Consumer.html#committed(org.apache.kafka.common.TopicParti=
tion)">committed</a></code>&nbsp;in interface&nbsp;<code><a href=3D"http://=
kafka.apache.org/0100/javadoc/org/apache/kafka/clients/consumer/Consumer.ht=
ml" title=3D"interface in org.apache.kafka.clients.consumer">Consumer</a>&l=
t;<a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/clients/=
consumer/KafkaConsumer.html" title=3D"type parameter in KafkaConsumer">K</a=
>,<a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/clients/=
consumer/KafkaConsumer.html" title=3D"type parameter in KafkaConsumer">V</a=
>&gt;</code></dd>
<dt><span class=3D"strong">Parameters:</span></dt><dd><code>partition</code=
> - The partition to check</dd>
<dt><span class=3D"strong">Returns:</span></dt><dd>The last committed offse=
t and metadata or null if there was no prior commit</dd>
<dt><span class=3D"strong">Throws:</span></dt>
<dd><code><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/=
common/errors/WakeupException.html" title=3D"class in org.apache.kafka.comm=
on.errors">WakeupException</a></code> - if <a href=3D"http://kafka.apache.o=
rg/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#wakeup=
()"><code>wakeup()</code></a> is called before or while this
             function is called</dd>
<dd><code><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/=
common/errors/AuthorizationException.html" title=3D"class in org.apache.kaf=
ka.common.errors">AuthorizationException</a></code> - if not authorized to =
the topic or to the
             configured groupId</dd>
<dd><code><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/=
common/KafkaException.html" title=3D"class in org.apache.kafka.common">Kafk=
aException</a></code> - for any other unrecoverable errors</dd><dt><span cl=
ass=3D"strong">See Also:</span></dt><dd><a href=3D"http://kafka.apache.org/=
0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#committed=
(org.apache.kafka.common.TopicPartition)"><code>committed(TopicPartition)</=
code></a></dd></dl>
</li>
</ul>
<a name=3D"metrics()">
<!--   -->
</a>
<ul class=3D"blockList">
<li class=3D"blockList">
<h4>metrics</h4>
<pre>public&nbsp;<a href=3D"http://docs.oracle.com/javase/7/docs/api/java/u=
til/Map.html?is-external=3Dtrue" title=3D"class or interface in java.util">=
Map</a>&lt;<a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka=
/common/MetricName.html" title=3D"class in org.apache.kafka.common">MetricN=
ame</a>,? extends <a href=3D"http://kafka.apache.org/0100/javadoc/org/apach=
e/kafka/common/Metric.html" title=3D"interface in org.apache.kafka.common">=
Metric</a>&gt;&nbsp;metrics()</pre>
<div class=3D"block">Get the metrics kept by the consumer</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/=
clients/consumer/Consumer.html#metrics()">metrics</a></code>&nbsp;in interf=
ace&nbsp;<code><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/k=
afka/clients/consumer/Consumer.html" title=3D"interface in org.apache.kafka=
.clients.consumer">Consumer</a>&lt;<a href=3D"http://kafka.apache.org/0100/=
javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html" title=3D"type=
 parameter in KafkaConsumer">K</a>,<a href=3D"http://kafka.apache.org/0100/=
javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html" title=3D"type=
 parameter in KafkaConsumer">V</a>&gt;</code></dd>
<dt><span class=3D"strong">See Also:</span></dt><dd><a href=3D"http://kafka=
.apache.org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.ht=
ml#metrics()"><code>metrics()</code></a></dd></dl>
</li>
</ul>
<a name=3D"partitionsFor(java.lang.String)">
<!--   -->
</a>
<ul class=3D"blockList">
<li class=3D"blockList">
<h4>partitionsFor</h4>
<pre>public&nbsp;<a href=3D"http://docs.oracle.com/javase/7/docs/api/java/u=
til/List.html?is-external=3Dtrue" title=3D"class or interface in java.util"=
>List</a>&lt;<a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kaf=
ka/common/PartitionInfo.html" title=3D"class in org.apache.kafka.common">Pa=
rtitionInfo</a>&gt;&nbsp;partitionsFor(<a href=3D"http://docs.oracle.com/ja=
vase/7/docs/api/java/lang/String.html?is-external=3Dtrue" title=3D"class or=
 interface in java.lang">String</a>&nbsp;topic)</pre>
<div class=3D"block">Get metadata about the partitions for a given topic. T=
his method will issue a remote call to the server if it
 does not already have any metadata about the given topic.</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/=
clients/consumer/Consumer.html#partitionsFor(java.lang.String)">partitionsF=
or</a></code>&nbsp;in interface&nbsp;<code><a href=3D"http://kafka.apache.o=
rg/0100/javadoc/org/apache/kafka/clients/consumer/Consumer.html" title=3D"i=
nterface in org.apache.kafka.clients.consumer">Consumer</a>&lt;<a href=3D"h=
ttp://kafka.apache.org/0100/javadoc/org/apache/kafka/clients/consumer/Kafka=
Consumer.html" title=3D"type parameter in KafkaConsumer">K</a>,<a href=3D"h=
ttp://kafka.apache.org/0100/javadoc/org/apache/kafka/clients/consumer/Kafka=
Consumer.html" title=3D"type parameter in KafkaConsumer">V</a>&gt;</code></=
dd>
<dt><span class=3D"strong">Parameters:</span></dt><dd><code>topic</code> - =
The topic to get partition metadata for</dd>
<dt><span class=3D"strong">Returns:</span></dt><dd>The list of partitions</=
dd>
<dt><span class=3D"strong">Throws:</span></dt>
<dd><code><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/=
common/errors/WakeupException.html" title=3D"class in org.apache.kafka.comm=
on.errors">WakeupException</a></code> - if <a href=3D"http://kafka.apache.o=
rg/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#wakeup=
()"><code>wakeup()</code></a> is called before or while this
             function is called</dd>
<dd><code><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/=
common/errors/AuthorizationException.html" title=3D"class in org.apache.kaf=
ka.common.errors">AuthorizationException</a></code> - if not authorized to =
the specified topic</dd>
<dd><code><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/=
common/errors/TimeoutException.html" title=3D"class in org.apache.kafka.com=
mon.errors">TimeoutException</a></code> - if the topic metadata could not b=
e fetched before
             expiration of the configured request timeout</dd>
<dd><code><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/=
common/KafkaException.html" title=3D"class in org.apache.kafka.common">Kafk=
aException</a></code> - for any other unrecoverable errors</dd><dt><span cl=
ass=3D"strong">See Also:</span></dt><dd><a href=3D"http://kafka.apache.org/=
0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#partition=
sFor(java.lang.String)"><code>partitionsFor(String)</code></a></dd></dl>
</li>
</ul>
<a name=3D"listTopics()">
<!--   -->
</a>
<ul class=3D"blockList">
<li class=3D"blockList">
<h4>listTopics</h4>
<pre>public&nbsp;<a href=3D"http://docs.oracle.com/javase/7/docs/api/java/u=
til/Map.html?is-external=3Dtrue" title=3D"class or interface in java.util">=
Map</a>&lt;<a href=3D"http://docs.oracle.com/javase/7/docs/api/java/lang/St=
ring.html?is-external=3Dtrue" title=3D"class or interface in java.lang">Str=
ing</a>,<a href=3D"http://docs.oracle.com/javase/7/docs/api/java/util/List.=
html?is-external=3Dtrue" title=3D"class or interface in java.util">List</a>=
&lt;<a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/common=
/PartitionInfo.html" title=3D"class in org.apache.kafka.common">PartitionIn=
fo</a>&gt;&gt;&nbsp;listTopics()</pre>
<div class=3D"block">Get metadata about partitions for all topics that the =
user is authorized to view. This method will issue a
 remote call to the server.</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/=
clients/consumer/Consumer.html#listTopics()">listTopics</a></code>&nbsp;in =
interface&nbsp;<code><a href=3D"http://kafka.apache.org/0100/javadoc/org/ap=
ache/kafka/clients/consumer/Consumer.html" title=3D"interface in org.apache=
.kafka.clients.consumer">Consumer</a>&lt;<a href=3D"http://kafka.apache.org=
/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html" title=
=3D"type parameter in KafkaConsumer">K</a>,<a href=3D"http://kafka.apache.o=
rg/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html" title=
=3D"type parameter in KafkaConsumer">V</a>&gt;</code></dd>
<dt><span class=3D"strong">Returns:</span></dt><dd>The map of topics and it=
s partitions</dd>
<dt><span class=3D"strong">Throws:</span></dt>
<dd><code><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/=
common/errors/WakeupException.html" title=3D"class in org.apache.kafka.comm=
on.errors">WakeupException</a></code> - if <a href=3D"http://kafka.apache.o=
rg/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#wakeup=
()"><code>wakeup()</code></a> is called before or while this
             function is called</dd>
<dd><code><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/=
common/errors/TimeoutException.html" title=3D"class in org.apache.kafka.com=
mon.errors">TimeoutException</a></code> - if the topic metadata could not b=
e fetched before
             expiration of the configured request timeout</dd>
<dd><code><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/=
common/KafkaException.html" title=3D"class in org.apache.kafka.common">Kafk=
aException</a></code> - for any other unrecoverable errors</dd><dt><span cl=
ass=3D"strong">See Also:</span></dt><dd><a href=3D"http://kafka.apache.org/=
0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#listTopic=
s()"><code>listTopics()</code></a></dd></dl>
</li>
</ul>
<a name=3D"pause(java.util.Collection)">
<!--   -->
</a>
<ul class=3D"blockList">
<li class=3D"blockList">
<h4>pause</h4>
<pre>public&nbsp;void&nbsp;pause(<a href=3D"http://docs.oracle.com/javase/7=
/docs/api/java/util/Collection.html?is-external=3Dtrue" title=3D"class or i=
nterface in java.util">Collection</a>&lt;<a href=3D"http://kafka.apache.org=
/0100/javadoc/org/apache/kafka/common/TopicPartition.html" title=3D"class i=
n org.apache.kafka.common">TopicPartition</a>&gt;&nbsp;partitions)</pre>
<div class=3D"block">Suspend fetching from the requested partitions. Future=
 calls to <a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/=
clients/consumer/KafkaConsumer.html#poll(long)"><code>poll(long)</code></a>=
 will not return
 any records from these partitions until they have been resumed using <a hr=
ef=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/clients/consume=
r/KafkaConsumer.html#resume(java.util.Collection)"><code>resume(Collection)=
</code></a>.
 Note that this method does not affect partition subscription. In particula=
r, it does not cause a group
 rebalance when automatic assignment is used.</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/=
clients/consumer/Consumer.html#pause(java.util.Collection)">pause</a></code=
>&nbsp;in interface&nbsp;<code><a href=3D"http://kafka.apache.org/0100/java=
doc/org/apache/kafka/clients/consumer/Consumer.html" title=3D"interface in =
org.apache.kafka.clients.consumer">Consumer</a>&lt;<a href=3D"http://kafka.=
apache.org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.htm=
l" title=3D"type parameter in KafkaConsumer">K</a>,<a href=3D"http://kafka.=
apache.org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.htm=
l" title=3D"type parameter in KafkaConsumer">V</a>&gt;</code></dd>
<dt><span class=3D"strong">Parameters:</span></dt><dd><code>partitions</cod=
e> - The partitions which should be paused</dd><dt><span class=3D"strong">S=
ee Also:</span></dt><dd><a href=3D"http://kafka.apache.org/0100/javadoc/org=
/apache/kafka/clients/consumer/KafkaConsumer.html#pause(java.util.Collectio=
n)"><code>pause(Collection)</code></a></dd></dl>
</li>
</ul>
<a name=3D"resume(java.util.Collection)">
<!--   -->
</a>
<ul class=3D"blockList">
<li class=3D"blockList">
<h4>resume</h4>
<pre>public&nbsp;void&nbsp;resume(<a href=3D"http://docs.oracle.com/javase/=
7/docs/api/java/util/Collection.html?is-external=3Dtrue" title=3D"class or =
interface in java.util">Collection</a>&lt;<a href=3D"http://kafka.apache.or=
g/0100/javadoc/org/apache/kafka/common/TopicPartition.html" title=3D"class =
in org.apache.kafka.common">TopicPartition</a>&gt;&nbsp;partitions)</pre>
<div class=3D"block">Resume specified partitions which have been paused wit=
h <a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/clients/=
consumer/KafkaConsumer.html#pause(java.util.Collection)"><code>pause(Collec=
tion)</code></a>. New calls to
 <a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/clients/c=
onsumer/KafkaConsumer.html#poll(long)"><code>poll(long)</code></a> will ret=
urn records from these partitions if there are any to be fetched.
 If the partitions were not previously paused, this method is a no-op.</div=
>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/=
clients/consumer/Consumer.html#resume(java.util.Collection)">resume</a></co=
de>&nbsp;in interface&nbsp;<code><a href=3D"http://kafka.apache.org/0100/ja=
vadoc/org/apache/kafka/clients/consumer/Consumer.html" title=3D"interface i=
n org.apache.kafka.clients.consumer">Consumer</a>&lt;<a href=3D"http://kafk=
a.apache.org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.h=
tml" title=3D"type parameter in KafkaConsumer">K</a>,<a href=3D"http://kafk=
a.apache.org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.h=
tml" title=3D"type parameter in KafkaConsumer">V</a>&gt;</code></dd>
<dt><span class=3D"strong">Parameters:</span></dt><dd><code>partitions</cod=
e> - The partitions which should be resumed</dd><dt><span class=3D"strong">=
See Also:</span></dt><dd><a href=3D"http://kafka.apache.org/0100/javadoc/or=
g/apache/kafka/clients/consumer/KafkaConsumer.html#resume(java.util.Collect=
ion)"><code>resume(Collection)</code></a></dd></dl>
</li>
</ul>
<a name=3D"paused()">
<!--   -->
</a>
<ul class=3D"blockList">
<li class=3D"blockList">
<h4>paused</h4>
<pre>public&nbsp;<a href=3D"http://docs.oracle.com/javase/7/docs/api/java/u=
til/Set.html?is-external=3Dtrue" title=3D"class or interface in java.util">=
Set</a>&lt;<a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka=
/common/TopicPartition.html" title=3D"class in org.apache.kafka.common">Top=
icPartition</a>&gt;&nbsp;paused()</pre>
<div class=3D"block">Get the set of partitions that were previously paused =
by a call to <a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kaf=
ka/clients/consumer/KafkaConsumer.html#pause(java.util.Collection)"><code>p=
ause(Collection)</code></a>.</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/=
clients/consumer/Consumer.html#paused()">paused</a></code>&nbsp;in interfac=
e&nbsp;<code><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kaf=
ka/clients/consumer/Consumer.html" title=3D"interface in org.apache.kafka.c=
lients.consumer">Consumer</a>&lt;<a href=3D"http://kafka.apache.org/0100/ja=
vadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html" title=3D"type p=
arameter in KafkaConsumer">K</a>,<a href=3D"http://kafka.apache.org/0100/ja=
vadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html" title=3D"type p=
arameter in KafkaConsumer">V</a>&gt;</code></dd>
<dt><span class=3D"strong">Returns:</span></dt><dd>The set of paused partit=
ions</dd><dt><span class=3D"strong">See Also:</span></dt><dd><a href=3D"htt=
p://kafka.apache.org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaCo=
nsumer.html#paused()"><code>paused()</code></a></dd></dl>
</li>
</ul>
<a name=3D"close()">
<!--   -->
</a>
<ul class=3D"blockList">
<li class=3D"blockList">
<h4>close</h4>
<pre>public&nbsp;void&nbsp;close()</pre>
<div class=3D"block">Close the consumer, waiting indefinitely for any neede=
d cleanup. If auto-commit is enabled, this
 will commit the current offsets. Note that <a href=3D"http://kafka.apache.=
org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html#wakeu=
p()"><code>wakeup()</code></a> cannot be use to interrupt close.</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href=3D"http://docs.oracle.com/javase/7/docs/api/java/io/Close=
able.html?is-external=3Dtrue#close()" title=3D"class or interface in java.i=
o">close</a></code>&nbsp;in interface&nbsp;<code><a href=3D"http://docs.ora=
cle.com/javase/7/docs/api/java/io/Closeable.html?is-external=3Dtrue" title=
=3D"class or interface in java.io">Closeable</a></code></dd>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href=3D"http://docs.oracle.com/javase/7/docs/api/java/lang/Aut=
oCloseable.html?is-external=3Dtrue#close()" title=3D"class or interface in =
java.lang">close</a></code>&nbsp;in interface&nbsp;<code><a href=3D"http://=
docs.oracle.com/javase/7/docs/api/java/lang/AutoCloseable.html?is-external=
=3Dtrue" title=3D"class or interface in java.lang">AutoCloseable</a></code>=
</dd>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/=
clients/consumer/Consumer.html#close()">close</a></code>&nbsp;in interface&=
nbsp;<code><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka=
/clients/consumer/Consumer.html" title=3D"interface in org.apache.kafka.cli=
ents.consumer">Consumer</a>&lt;<a href=3D"http://kafka.apache.org/0100/java=
doc/org/apache/kafka/clients/consumer/KafkaConsumer.html" title=3D"type par=
ameter in KafkaConsumer">K</a>,<a href=3D"http://kafka.apache.org/0100/java=
doc/org/apache/kafka/clients/consumer/KafkaConsumer.html" title=3D"type par=
ameter in KafkaConsumer">V</a>&gt;</code></dd>
<dt><span class=3D"strong">See Also:</span></dt><dd><a href=3D"http://kafka=
.apache.org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.ht=
ml#close()"><code>close()</code></a></dd></dl>
</li>
</ul>
<a name=3D"wakeup()">
<!--   -->
</a>
<ul class=3D"blockListLast">
<li class=3D"blockList">
<h4>wakeup</h4>
<pre>public&nbsp;void&nbsp;wakeup()</pre>
<div class=3D"block">Wakeup the consumer. This method is thread-safe and is=
 useful in particular to abort a long poll.
 The thread which is blocking in an operation will throw <a href=3D"http://=
kafka.apache.org/0100/javadoc/org/apache/kafka/common/errors/WakeupExceptio=
n.html" title=3D"class in org.apache.kafka.common.errors"><code>WakeupExcep=
tion</code></a>.</div>
<dl>
<dt><strong>Specified by:</strong></dt>
<dd><code><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/=
clients/consumer/Consumer.html#wakeup()">wakeup</a></code>&nbsp;in interfac=
e&nbsp;<code><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kaf=
ka/clients/consumer/Consumer.html" title=3D"interface in org.apache.kafka.c=
lients.consumer">Consumer</a>&lt;<a href=3D"http://kafka.apache.org/0100/ja=
vadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html" title=3D"type p=
arameter in KafkaConsumer">K</a>,<a href=3D"http://kafka.apache.org/0100/ja=
vadoc/org/apache/kafka/clients/consumer/KafkaConsumer.html" title=3D"type p=
arameter in KafkaConsumer">V</a>&gt;</code></dd>
<dt><span class=3D"strong">See Also:</span></dt><dd><a href=3D"http://kafka=
.apache.org/0100/javadoc/org/apache/kafka/clients/consumer/KafkaConsumer.ht=
ml#wakeup()"><code>wakeup()</code></a></dd></dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- =3D=3D=3D=3D=3D=3D=3D=3D=3D END OF CLASS DATA =3D=3D=3D=3D=3D=3D=3D=3D=
=3D -->
<!-- =3D=3D=3D=3D=3D=3D=3D START OF BOTTOM NAVBAR =3D=3D=3D=3D=3D=3D -->
<div class=3D"bottomNav"><a name=3D"navbar_bottom">
<!--   -->
</a><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/client=
s/consumer/KafkaConsumer.html#skip-navbar_bottom" title=3D"Skip navigation =
links"></a><a name=3D"navbar_bottom_firstrow">
<!--   -->
</a>
<ul class=3D"navList" title=3D"Navigation">
<li><a href=3D"http://kafka.apache.org/0100/javadoc/overview-summary.html">=
Overview</a></li>
<li><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/client=
s/consumer/package-summary.html">Package</a></li>
<li class=3D"navBarCell1Rev">Class</li>
<li><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/client=
s/consumer/package-tree.html">Tree</a></li>
<li><a href=3D"http://kafka.apache.org/0100/javadoc/deprecated-list.html">D=
eprecated</a></li>
<li><a href=3D"http://kafka.apache.org/0100/javadoc/index-all.html">Index</=
a></li>
<li><a href=3D"http://kafka.apache.org/0100/javadoc/help-doc.html">Help</a>=
</li>
</ul>
</div>
<div class=3D"subNav">
<ul class=3D"navList">
<li><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/client=
s/consumer/InvalidOffsetException.html" title=3D"class in org.apache.kafka.=
clients.consumer"><span class=3D"strong">Prev Class</span></a></li>
<li><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/client=
s/consumer/MockConsumer.html" title=3D"class in org.apache.kafka.clients.co=
nsumer"><span class=3D"strong">Next Class</span></a></li>
</ul>
<ul class=3D"navList">
<li><a href=3D"http://kafka.apache.org/0100/javadoc/index.html?org/apache/k=
afka/clients/consumer/KafkaConsumer.html" target=3D"_top">Frames</a></li>
<li><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/client=
s/consumer/KafkaConsumer.html" target=3D"_top">No Frames</a></li>
</ul>

<div>

</div>
<div>
<ul class=3D"subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/client=
s/consumer/KafkaConsumer.html#constructor_summary">Constr</a>&nbsp;|&nbsp;<=
/li>
<li><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/client=
s/consumer/KafkaConsumer.html#method_summary">Method</a></li>
</ul>
<ul class=3D"subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/client=
s/consumer/KafkaConsumer.html#constructor_detail">Constr</a>&nbsp;|&nbsp;</=
li>
<li><a href=3D"http://kafka.apache.org/0100/javadoc/org/apache/kafka/client=
s/consumer/KafkaConsumer.html#method_detail">Method</a></li>
</ul>
</div>
<a name=3D"skip-navbar_bottom">
<!--   -->
</a></div>
<!-- =3D=3D=3D=3D=3D=3D=3D=3D END OF BOTTOM NAVBAR =3D=3D=3D=3D=3D=3D=3D --=
>


</body></html>
------MultipartBoundary--4zSMpuCixkIqOTmtCXU1ukyDDNPrNvrNqwIg9sTylH------
